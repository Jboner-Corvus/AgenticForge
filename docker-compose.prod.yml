# Production Docker Compose Override
# Use with: docker compose -f docker-compose.yml -f docker-compose.prod.yml up -d

services:
  redis:
    restart: always
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  postgres:
    restart: always
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    # Enable persistent storage
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups:rw

  server:
    restart: always
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G
    # Production environment variables
    environment:
      - NODE_ENV=production
      - LOG_LEVEL=info
      - CONTAINER_MEMORY_LIMIT=2g
    # Health check configuration
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  web:
    restart: always
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    # Production nginx configuration
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s

  otel-collector:
    restart: always
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

# Additional production volumes
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  app_logs:
    driver: local

networks:
  agentic_network:
    driver: bridge
    name: g_forge_network_prod