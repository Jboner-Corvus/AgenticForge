{"version":3,"file":"toolLoader.js","sourceRoot":"","sources":["toolLoader.ts"],"names":[],"mappings":"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","sourcesContent":["import * as chokidar from 'chokidar';\n// src/utils/toolLoader.ts\nimport { promises as fs } from 'fs';\nimport path from 'path';\nimport { fileURLToPath } from 'url';\n\nimport type { Tool } from '../types.js';\n\nimport logger from '../logger.js';\nimport { getErrDetails } from './errorUtils.js';\n\nconst __filename = fileURLToPath(import.meta.url);\nconst __dirname = path.dirname(__filename);\n\n// Cache pour stocker les outils une fois chargés\nconst loadedTools: Map<string, Tool> = new Map();\nlet toolsArray: Tool[] = [];\nlet watcher: chokidar.FSWatcher | null = null;\n\nconst runningInDist = __dirname.includes('dist');\nconst fileExtension = runningInDist ? '.tool.js' : '.tool.ts';\nconst toolsDir =\n  process.env.TOOLS_PATH ||\n  (runningInDist\n    ? path.join(__dirname, 'tools')\n    : path.resolve(process.cwd(), 'packages/core/src/tools'));\nconst generatedToolsDir = path.join(toolsDir, 'generated');\n\n/**\n * Récupère la liste de tous les outils, en les chargeant s'ils ne le sont pas déjà.\n * C'est la fonction à utiliser dans toute l'application pour garantir une seule source de vérité.\n */\nexport async function getTools(): Promise<Tool[]> {\n  if (loadedTools.size === 0 && toolsArray.length === 0) {\n    await _internalLoadTools();\n    if (!watcher) {\n      watchTools();\n    }\n  }\n  return toolsArray;\n}\n\n/**\n * Charge dynamiquement tous les outils disponibles. (Fonction interne)\n * @returns Une promesse qui se résout avec un tableau de tous les outils chargés.\n */\nasync function _internalLoadTools(): Promise<void> {\n  loadedTools.clear();\n  toolsArray = [];\n\n  const toolFiles = await findToolFiles(toolsDir, fileExtension);\n\n  logger.info(\n    `Début du chargement dynamique des outils depuis: ${toolsDir} (recherche de *${fileExtension})`,\n  );\n\n  for (const file of toolFiles) {\n    await loadToolFile(file);\n  }\n  logger.info(`${loadedTools.size} outils ont été chargés dynamiquement.`);\n  toolsArray = Array.from(loadedTools.values());\n}\n\n/**\n * Trouve récursivement les fichiers d'outils. (Fonction interne)\n */\nasync function findToolFiles(\n  dir: string,\n  extension: string,\n): Promise<string[]> {\n  let files: string[] = [];\n  try {\n    const entries = await fs.readdir(dir, { withFileTypes: true });\n    for (const entry of entries) {\n      const fullPath = path.join(dir, entry.name);\n      if (entry.isDirectory()) {\n        files = files.concat(await findToolFiles(fullPath, extension));\n      } else if (entry.isFile() && entry.name.endsWith(extension)) {\n        files.push(fullPath);\n      }\n    }\n  } catch (error) {\n    logger.error({\n      ...getErrDetails(error),\n      directory: dir,\n      logContext: \"Erreur lors du parcours du répertoire d'outils.\",\n    });\n  }\n  return files;\n}\n\nasync function loadToolFile(file: string): Promise<void> {\n  try {\n    // Invalidate module cache for dynamic loading\n    if (process.env.NODE_ENV === 'development') {\n      const resolvedPath = path.resolve(file);\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      delete (global as any)._moduleCache?.[resolvedPath];\n    }\n\n    const module = await import(`${path.resolve(file)}?update=${Date.now()}`);\n    for (const exportName in module) {\n      const exportedItem = module[exportName];\n      if (\n        exportedItem &&\n        typeof exportedItem === 'object' &&\n        'name' in exportedItem &&\n        'execute' in exportedItem\n      ) {\n        loadedTools.set(file, exportedItem as Tool);\n        logger.info(\n          `Outil chargé : '${exportedItem.name}' depuis ${path.basename(file)}`,\n        );\n      }\n    }\n  } catch (error) {\n    logger.error({\n      ...getErrDetails(error),\n      file,\n      logContext: `Échec du chargement dynamique du fichier d'outil.`,\n    });\n  }\n}\n\nfunction unloadToolFile(file: string): void {\n  if (loadedTools.has(file)) {\n    const tool = loadedTools.get(file);\n    loadedTools.delete(file);\n    toolsArray = Array.from(loadedTools.values());\n    logger.info(\n      `Outil déchargé : '${tool?.name}' depuis ${path.basename(file)}`,\n    );\n  }\n}\n\nfunction watchTools(): void {\n  logger.info(\n    `Démarrage de l'observateur de fichiers pour les outils générés dans: ${generatedToolsDir}`,\n  );\n  watcher = chokidar.watch(generatedToolsDir, {\n    ignored: /(^|\\/)\\..*|\\.d\\.ts$/,\n    ignoreInitial: true,\n    persistent: true,\n  });\n\n  watcher.on('add', async (filePath) => {\n    logger.info(`Nouveau fichier d'outil détecté: ${filePath}`);\n    await loadToolFile(filePath);\n    toolsArray = Array.from(loadedTools.values());\n  });\n\n  watcher.on('change', async (filePath) => {\n    logger.info(`Fichier d'outil modifié détecté: ${filePath}`);\n    unloadToolFile(filePath);\n    await loadToolFile(filePath);\n    toolsArray = Array.from(loadedTools.values());\n  });\n\n  watcher.on('unlink', (filePath) => {\n    logger.info(`Fichier d'outil supprimé détecté: ${filePath}`);\n    unloadToolFile(filePath);\n  });\n\n  watcher.on('error', (error) => {\n    logger.error({\n      ...getErrDetails(error),\n      logContext: \"Erreur de l'observateur de fichiers d'outils.\",\n    });\n  });\n}\n"]}