DEBUG: process.cwd(): /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core
DEBUG: Resolved .env path: /home/demon/agentforge/AgenticForge2/AgenticForge/.env
DEBUG: .env file loaded successfully. Keys loaded: [
  'PUBLIC_PORT',            'WEB_PORT',
  'PORT',                   'AUTH_TOKEN',
  'VITE_AUTH_TOKEN',        'LLM_PROVIDER',
  'LLM_PROVIDER_HIERARCHY', 'LLM_MODEL_NAME',
  'LLM_API_KEY',            'POSTGRES_HOST',
  'POSTGRES_USER',          'POSTGRES_PASSWORD',
  'POSTGRES_DB',            'REDIS_HOST',
  'REDIS_PORT',             'REDIS_HOST_PORT',
  'REDIS_PASSWORD',         'NODE_ENV',
  'LOG_LEVEL',              'CONTAINER_MEMORY_LIMIT',
  'HOST_PROJECT_PATH',      'WORKER_WORKSPACE_PATH',
  'GEMINI_API_KEY',         'GEMINI_MODEL'
]
Resolved WORKSPACE_PATH: /home/demon/agentforge/workspace
process.env.REDIS_HOST: localhost
config.REDIS_HOST: localhost
config.LLM_API_KEY: SVBp87e2WXU9g5YT3eZj84BnwKeulxrTPaf9RAYIJ2x4y6Zwayo0BDkpE9l5rV63igffrAoO53Ny6N9PRLO6PA
{"level":30,"time":1756004293236,"pid":1102381,"hostname":"tiloup","msg":"Successfully connected to Redis."}
{"level":40,"time":1756004293241,"pid":1102381,"hostname":"tiloup","apiKey":"SVBp87e2WX...","apiModel":"qwen3-coder-plus","apiProvider":"qwen","msg":"LLM API key already exists - updating existing entry instead of creating duplicate."}
{"level":30,"time":1756004293242,"pid":1102381,"hostname":"tiloup","apiKey":"SVBp87e2WX...","apiModel":"qwen3-coder-plus","apiProvider":"qwen","msg":"LLM API key updated (duplicate avoided)."}
{"level":30,"time":1756004293243,"pid":1102381,"hostname":"tiloup","msg":"LLM API key for qwen added to KeyManager."}
{"level":30,"time":1756004293243,"pid":1102381,"hostname":"tiloup","msg":"[INIT LLM] LLM API key management is now handled dynamically."}
{"level":30,"time":1756004293243,"pid":1102381,"hostname":"tiloup","msg":"PostgreSQL Host for Worker: localhost"}
[_internalLoadTools] Starting to load tools dynamically.
[getToolsDir] Constructed tools path: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions
[findToolFiles] Scanning directory: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions
[findToolFiles] Looking for files with extension: .tool.js
[findToolFiles] Found 16 entries in directory
[findToolFiles] Processing entry: ai, isDirectory: true, isFile: false
[findToolFiles] Scanning directory: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/ai
[findToolFiles] Looking for files with extension: .tool.js
[findToolFiles] Found 13 entries in directory
[findToolFiles] Processing entry: summarize.tool.d.d.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: summarize.tool.d.js, isDirectory: false, isFile: true
[findToolFiles] Processing entry: summarize.tool.d.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: summarize.tool.d.ts.map, isDirectory: false, isFile: true
[findToolFiles] Processing entry: summarize.tool.js, isDirectory: false, isFile: true
[findToolFiles] Found matching file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/ai/summarize.tool.js
[findToolFiles] Processing entry: summarize.tool.js.map, isDirectory: false, isFile: true
[findToolFiles] Processing entry: summarize.tool.test.d.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: summarize.tool.test.js, isDirectory: false, isFile: true
[findToolFiles] Processing entry: summarize.tool.test.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: summarize.tool.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: summarizer.prompt.d.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: summarizer.prompt.js, isDirectory: false, isFile: true
[findToolFiles] Processing entry: summarizer.prompt.ts, isDirectory: false, isFile: true
[findToolFiles] Returning files: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/ai/summarize.tool.js
[findToolFiles] Processing entry: browser, isDirectory: true, isFile: false
[findToolFiles] Scanning directory: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/browser
[findToolFiles] Looking for files with extension: .tool.js
[findToolFiles] Found 3 entries in directory
[findToolFiles] Processing entry: tools.browser.integration.test.d.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: tools.browser.integration.test.js, isDirectory: false, isFile: true
[findToolFiles] Processing entry: tools.browser.integration.test.ts, isDirectory: false, isFile: true
[findToolFiles] Returning files: 
[findToolFiles] Processing entry: clientConsole.tool.d.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: clientConsole.tool.js, isDirectory: false, isFile: true
[findToolFiles] Found matching file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/clientConsole.tool.js
[findToolFiles] Processing entry: clientConsole.tool.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: code, isDirectory: true, isFile: false
[findToolFiles] Scanning directory: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/code
[findToolFiles] Looking for files with extension: .tool.js
[findToolFiles] Found 6 entries in directory
[findToolFiles] Processing entry: executeShellCommand.tool.d.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: executeShellCommand.tool.js, isDirectory: false, isFile: true
[findToolFiles] Found matching file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/code/executeShellCommand.tool.js
[findToolFiles] Processing entry: executeShellCommand.tool.test.d.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: executeShellCommand.tool.test.js, isDirectory: false, isFile: true
[findToolFiles] Processing entry: executeShellCommand.tool.test.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: executeShellCommand.tool.ts, isDirectory: false, isFile: true
[findToolFiles] Returning files: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/code/executeShellCommand.tool.js
[findToolFiles] Processing entry: fs, isDirectory: true, isFile: false
[findToolFiles] Scanning directory: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/fs
[findToolFiles] Looking for files with extension: .tool.js
[findToolFiles] Found 40 entries in directory
[findToolFiles] Processing entry: editFile.tool.d.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: editFile.tool.js, isDirectory: false, isFile: true
[findToolFiles] Found matching file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/fs/editFile.tool.js
[findToolFiles] Processing entry: editFile.tool.test.d.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: editFile.tool.test.js, isDirectory: false, isFile: true
[findToolFiles] Processing entry: editFile.tool.test.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: editFile.tool.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: listDirectory.tool.d.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: listDirectory.tool.js, isDirectory: false, isFile: true
[findToolFiles] Found matching file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/fs/listDirectory.tool.js
[findToolFiles] Processing entry: listDirectory.tool.test.d.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: listDirectory.tool.test.js, isDirectory: false, isFile: true
[findToolFiles] Processing entry: listDirectory.tool.test.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: listDirectory.tool.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: listFiles.tool.d.d.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: listFiles.tool.d.js, isDirectory: false, isFile: true
[findToolFiles] Processing entry: listFiles.tool.d.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: listFiles.tool.d.ts.map, isDirectory: false, isFile: true
[findToolFiles] Processing entry: listFiles.tool.js.map, isDirectory: false, isFile: true
[findToolFiles] Processing entry: readFile.tool.d.d.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: readFile.tool.d.js, isDirectory: false, isFile: true
[findToolFiles] Processing entry: readFile.tool.d.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: readFile.tool.d.ts.map, isDirectory: false, isFile: true
[findToolFiles] Processing entry: readFile.tool.js, isDirectory: false, isFile: true
[findToolFiles] Found matching file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/fs/readFile.tool.js
[findToolFiles] Processing entry: readFile.tool.js.map, isDirectory: false, isFile: true
[findToolFiles] Processing entry: readFile.tool.test.d.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: readFile.tool.test.js, isDirectory: false, isFile: true
[findToolFiles] Processing entry: readFile.tool.test.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: readFile.tool.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: simpleList.tool.d.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: simpleList.tool.js, isDirectory: false, isFile: true
[findToolFiles] Found matching file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/fs/simpleList.tool.js
[findToolFiles] Processing entry: simpleList.tool.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: writeFile.tool.d.d.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: writeFile.tool.d.js, isDirectory: false, isFile: true
[findToolFiles] Processing entry: writeFile.tool.d.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: writeFile.tool.d.ts.map, isDirectory: false, isFile: true
[findToolFiles] Processing entry: writeFile.tool.js, isDirectory: false, isFile: true
[findToolFiles] Found matching file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/fs/writeFile.tool.js
[findToolFiles] Processing entry: writeFile.tool.js.map, isDirectory: false, isFile: true
[findToolFiles] Processing entry: writeFile.tool.test.d.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: writeFile.tool.test.js, isDirectory: false, isFile: true
[findToolFiles] Processing entry: writeFile.tool.test.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: writeFile.tool.ts, isDirectory: false, isFile: true
[findToolFiles] Returning files: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/fs/editFile.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/fs/listDirectory.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/fs/readFile.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/fs/simpleList.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/fs/writeFile.tool.js
[findToolFiles] Processing entry: index.d.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: index.d.ts.map, isDirectory: false, isFile: true
[findToolFiles] Processing entry: index.js, isDirectory: false, isFile: true
[findToolFiles] Processing entry: index.js.map, isDirectory: false, isFile: true
[findToolFiles] Processing entry: index.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: planning, isDirectory: true, isFile: false
[findToolFiles] Scanning directory: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/planning
[findToolFiles] Looking for files with extension: .tool.js
{"level":30,"time":1756004293268,"pid":1102381,"hostname":"tiloup","msg":"PostgreSQL connected successfully"}
{"level":30,"time":1756004293268,"pid":1102381,"hostname":"tiloup","path":"/home/demon/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin","msg":"Worker process.env.PATH at startup:"}
{"level":30,"time":1756004293269,"pid":1102381,"hostname":"tiloup","msg":"[_internalLoadTools] Starting to load tools dynamically."}
{"level":30,"time":1756004293269,"pid":1102381,"hostname":"tiloup","msg":"[findToolFiles] Scanning directory: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions"}
{"level":30,"time":1756004293270,"pid":1102381,"hostname":"tiloup","msg":"[findToolFiles] Scanning directory: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/ai"}
{"level":30,"time":1756004293272,"pid":1102381,"hostname":"tiloup","msg":"[findToolFiles] Scanning directory: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/browser"}
{"level":30,"time":1756004293273,"pid":1102381,"hostname":"tiloup","msg":"[findToolFiles] Scanning directory: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/code"}
{"level":30,"time":1756004293274,"pid":1102381,"hostname":"tiloup","msg":"[findToolFiles] Scanning directory: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/fs"}
[findToolFiles] Found 6 entries in directory
{"level":30,"time":1756004293278,"pid":1102381,"hostname":"tiloup","msg":"[findToolFiles] Scanning directory: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/planning"}
[findToolFiles] Processing entry: projectPlanning.tool.d.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: projectPlanning.tool.js, isDirectory: false, isFile: true
[findToolFiles] Found matching file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/planning/projectPlanning.tool.js
[findToolFiles] Processing entry: projectPlanning.tool.test.d.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: projectPlanning.tool.test.js, isDirectory: false, isFile: true
[findToolFiles] Processing entry: projectPlanning.tool.test.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: projectPlanning.tool.ts, isDirectory: false, isFile: true
[findToolFiles] Returning files: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/planning/projectPlanning.tool.js
[findToolFiles] Processing entry: search, isDirectory: true, isFile: false
[findToolFiles] Scanning directory: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/search
[findToolFiles] Looking for files with extension: .tool.js
[findToolFiles] Found 16 entries in directory
[findToolFiles] Processing entry: webNavigate.tool.d.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: webNavigate.tool.js, isDirectory: false, isFile: true
[findToolFiles] Found matching file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/search/webNavigate.tool.js
[findToolFiles] Processing entry: webNavigate.tool.ts, isDirectory: false, isFile: true
{"level":30,"time":1756004293279,"pid":1102381,"hostname":"tiloup","msg":"[findToolFiles] Scanning directory: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/search"}
[findToolFiles] Processing entry: webSearch.tool.d.d.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: webSearch.tool.d.js, isDirectory: false, isFile: true
[findToolFiles] Processing entry: webSearch.tool.d.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: webSearch.tool.d.ts.map, isDirectory: false, isFile: true
[findToolFiles] Processing entry: webSearch.tool.js, isDirectory: false, isFile: true
[findToolFiles] Found matching file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/search/webSearch.tool.js
[findToolFiles] Processing entry: webSearch.tool.js.map, isDirectory: false, isFile: true
[findToolFiles] Processing entry: webSearch.tool.test.d.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: webSearch.tool.test.js, isDirectory: false, isFile: true
[findToolFiles] Processing entry: webSearch.tool.test.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: webSearch.tool.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: webSearchApi.tool.d.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: webSearchApi.tool.js, isDirectory: false, isFile: true
[findToolFiles] Found matching file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/search/webSearchApi.tool.js
[findToolFiles] Processing entry: webSearchApi.tool.ts, isDirectory: false, isFile: true
[findToolFiles] Returning files: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/search/webNavigate.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/search/webSearch.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/search/webSearchApi.tool.js
[findToolFiles] Processing entry: system, isDirectory: true, isFile: false
[findToolFiles] Scanning directory: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system
[findToolFiles] Looking for files with extension: .tool.js
[findToolFiles] Found 70 entries in directory
[findToolFiles] Processing entry: __tests__, isDirectory: true, isFile: false
[findToolFiles] Scanning directory: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/__tests__
[findToolFiles] Looking for files with extension: .tool.js
[findToolFiles] Found 3 entries in directory
[findToolFiles] Processing entry: todoList.test.d.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: todoList.test.js, isDirectory: false, isFile: true
[findToolFiles] Processing entry: todoList.test.ts, isDirectory: false, isFile: true
[findToolFiles] Returning files: 
[findToolFiles] Processing entry: agentResponse.tool.d.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: agentResponse.tool.js, isDirectory: false, isFile: true
[findToolFiles] Found matching file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/agentResponse.tool.js
[findToolFiles] Processing entry: agentResponse.tool.test.d.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: agentResponse.tool.test.js, isDirectory: false, isFile: true
[findToolFiles] Processing entry: agentResponse.tool.test.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: agentResponse.tool.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: agentThought.tool.d.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: agentThought.tool.js, isDirectory: false, isFile: true
[findToolFiles] Found matching file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/agentThought.tool.js
[findToolFiles] Processing entry: agentThought.tool.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: createTool.tool.d.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: createTool.tool.js, isDirectory: false, isFile: true
[findToolFiles] Found matching file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/createTool.tool.js
[findToolFiles] Processing entry: createTool.tool.test.d.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: createTool.tool.test.js, isDirectory: false, isFile: true
[findToolFiles] Processing entry: createTool.tool.test.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: createTool.tool.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: delegateTask.tool.d.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: delegateTask.tool.js, isDirectory: false, isFile: true
[findToolFiles] Found matching file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/delegateTask.tool.js
[findToolFiles] Processing entry: delegateTask.tool.ts, isDirectory: false, isFile: true
{"level":30,"time":1756004293280,"pid":1102381,"hostname":"tiloup","msg":"[findToolFiles] Scanning directory: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system"}
{"level":30,"time":1756004293281,"pid":1102381,"hostname":"tiloup","msg":"[findToolFiles] Scanning directory: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/__tests__"}
[findToolFiles] Processing entry: displayCanvas.tool.d.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: displayCanvas.tool.js, isDirectory: false, isFile: true
[findToolFiles] Found matching file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/displayCanvas.tool.js
[findToolFiles] Processing entry: displayCanvas.tool.test.d.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: displayCanvas.tool.test.js, isDirectory: false, isFile: true
[findToolFiles] Processing entry: displayCanvas.tool.test.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: displayCanvas.tool.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: echo.tool.d.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: echo.tool.js, isDirectory: false, isFile: true
[findToolFiles] Found matching file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/echo.tool.js
[findToolFiles] Processing entry: echo.tool.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: enhancedTodoList.tool.d.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: enhancedTodoList.tool.js, isDirectory: false, isFile: true
[findToolFiles] Found matching file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/enhancedTodoList.tool.js
[findToolFiles] Processing entry: enhancedTodoList.tool.test.d.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: enhancedTodoList.tool.test.js, isDirectory: false, isFile: true
[findToolFiles] Processing entry: enhancedTodoList.tool.test.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: enhancedTodoList.tool.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: finish.tool.d.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: finish.tool.js, isDirectory: false, isFile: true
[findToolFiles] Found matching file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/finish.tool.js
[findToolFiles] Processing entry: finish.tool.test.d.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: finish.tool.test.js, isDirectory: false, isFile: true
[findToolFiles] Processing entry: finish.tool.test.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: finish.tool.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: listTools.tool.d.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: listTools.tool.js, isDirectory: false, isFile: true
[findToolFiles] Found matching file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/listTools.tool.js
[findToolFiles] Processing entry: listTools.tool.test.d.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: listTools.tool.test.js, isDirectory: false, isFile: true
[findToolFiles] Processing entry: listTools.tool.test.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: listTools.tool.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: manageTodoList.tool.d.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: manageTodoList.tool.js, isDirectory: false, isFile: true
[findToolFiles] Found matching file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/manageTodoList.tool.js
[findToolFiles] Processing entry: manageTodoList.tool.test.d.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: manageTodoList.tool.test.js, isDirectory: false, isFile: true
[findToolFiles] Processing entry: manageTodoList.tool.test.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: manageTodoList.tool.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: projectManagement.d.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: projectManagement.js, isDirectory: false, isFile: true
[findToolFiles] Processing entry: projectManagement.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: todoDataModels.d.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: todoDataModels.js, isDirectory: false, isFile: true
[findToolFiles] Processing entry: todoDataModels.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: todoEventOptimization.d.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: todoEventOptimization.js, isDirectory: false, isFile: true
[findToolFiles] Processing entry: todoEventOptimization.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: todoPerformanceMonitoring.d.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: todoPerformanceMonitoring.js, isDirectory: false, isFile: true
[findToolFiles] Processing entry: todoPerformanceMonitoring.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: todoStateManagement.d.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: todoStateManagement.js, isDirectory: false, isFile: true
[findToolFiles] Processing entry: todoStateManagement.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: unifiedTodoList.tool.d.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: unifiedTodoList.tool.js, isDirectory: false, isFile: true
[findToolFiles] Found matching file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/unifiedTodoList.tool.js
[findToolFiles] Processing entry: unifiedTodoList.tool.ts, isDirectory: false, isFile: true
[findToolFiles] Returning files: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/agentResponse.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/agentThought.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/createTool.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/delegateTask.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/displayCanvas.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/echo.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/enhancedTodoList.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/finish.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/listTools.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/manageTodoList.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/unifiedTodoList.tool.js
[findToolFiles] Processing entry: web, isDirectory: true, isFile: false
[findToolFiles] Scanning directory: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/web
[findToolFiles] Looking for files with extension: .tool.js
[findToolFiles] Found 6 entries in directory
[findToolFiles] Processing entry: browser.tool.d.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: browser.tool.js, isDirectory: false, isFile: true
[findToolFiles] Found matching file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/web/browser.tool.js
[findToolFiles] Processing entry: browser.tool.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: browserManager.d.ts, isDirectory: false, isFile: true
[findToolFiles] Processing entry: browserManager.js, isDirectory: false, isFile: true
[findToolFiles] Processing entry: browserManager.ts, isDirectory: false, isFile: true
[findToolFiles] Returning files: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/web/browser.tool.js
[findToolFiles] Returning files: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/ai/summarize.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/clientConsole.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/code/executeShellCommand.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/fs/editFile.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/fs/listDirectory.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/fs/readFile.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/fs/simpleList.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/fs/writeFile.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/planning/projectPlanning.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/search/webNavigate.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/search/webSearch.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/search/webSearchApi.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/agentResponse.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/agentThought.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/createTool.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/delegateTask.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/displayCanvas.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/echo.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/enhancedTodoList.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/finish.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/listTools.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/manageTodoList.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/unifiedTodoList.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/web/browser.tool.js
[_internalLoadTools] Found tool files: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/ai/summarize.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/clientConsole.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/code/executeShellCommand.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/fs/editFile.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/fs/listDirectory.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/fs/readFile.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/fs/simpleList.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/fs/writeFile.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/planning/projectPlanning.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/search/webNavigate.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/search/webSearch.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/search/webSearchApi.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/agentResponse.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/agentThought.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/createTool.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/delegateTask.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/displayCanvas.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/echo.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/enhancedTodoList.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/finish.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/listTools.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/manageTodoList.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/unifiedTodoList.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/web/browser.tool.js
[GEMINI-DEBUG] Loading tool file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/ai/summarize.tool.js
{"level":30,"time":1756004293286,"pid":1102381,"hostname":"tiloup","msg":"[findToolFiles] Scanning directory: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/web"}
[_internalLoadTools] Successfully loaded tool file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/ai/summarize.tool.js
[GEMINI-DEBUG] Loading tool file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/clientConsole.tool.js
[_internalLoadTools] Successfully loaded tool file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/clientConsole.tool.js
[GEMINI-DEBUG] Loading tool file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/code/executeShellCommand.tool.js
[_internalLoadTools] Successfully loaded tool file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/code/executeShellCommand.tool.js
[GEMINI-DEBUG] Loading tool file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/fs/editFile.tool.js
[_internalLoadTools] Successfully loaded tool file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/fs/editFile.tool.js
[GEMINI-DEBUG] Loading tool file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/fs/listDirectory.tool.js
[_internalLoadTools] Successfully loaded tool file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/fs/listDirectory.tool.js
[GEMINI-DEBUG] Loading tool file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/fs/readFile.tool.js
[_internalLoadTools] Successfully loaded tool file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/fs/readFile.tool.js
[GEMINI-DEBUG] Loading tool file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/fs/simpleList.tool.js
[_internalLoadTools] Successfully loaded tool file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/fs/simpleList.tool.js
[GEMINI-DEBUG] Loading tool file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/fs/writeFile.tool.js
[_internalLoadTools] Successfully loaded tool file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/fs/writeFile.tool.js
[GEMINI-DEBUG] Loading tool file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/planning/projectPlanning.tool.js
[_internalLoadTools] Successfully loaded tool file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/planning/projectPlanning.tool.js
[GEMINI-DEBUG] Loading tool file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/search/webNavigate.tool.js
[_internalLoadTools] Successfully loaded tool file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/search/webNavigate.tool.js
[GEMINI-DEBUG] Loading tool file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/search/webSearch.tool.js
[_internalLoadTools] Successfully loaded tool file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/search/webSearch.tool.js
[GEMINI-DEBUG] Loading tool file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/search/webSearchApi.tool.js
[_internalLoadTools] Successfully loaded tool file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/search/webSearchApi.tool.js
[GEMINI-DEBUG] Loading tool file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/agentResponse.tool.js
[_internalLoadTools] Successfully loaded tool file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/agentResponse.tool.js
[GEMINI-DEBUG] Loading tool file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/agentThought.tool.js
[_internalLoadTools] Successfully loaded tool file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/agentThought.tool.js
[GEMINI-DEBUG] Loading tool file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/createTool.tool.js
[_internalLoadTools] Successfully loaded tool file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/createTool.tool.js
[GEMINI-DEBUG] Loading tool file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/delegateTask.tool.js
[_internalLoadTools] Successfully loaded tool file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/delegateTask.tool.js
[GEMINI-DEBUG] Loading tool file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/displayCanvas.tool.js
[_internalLoadTools] Successfully loaded tool file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/displayCanvas.tool.js
[GEMINI-DEBUG] Loading tool file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/echo.tool.js
[_internalLoadTools] Successfully loaded tool file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/echo.tool.js
[GEMINI-DEBUG] Loading tool file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/enhancedTodoList.tool.js
[_internalLoadTools] Successfully loaded tool file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/enhancedTodoList.tool.js
[GEMINI-DEBUG] Loading tool file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/finish.tool.js
[_internalLoadTools] Successfully loaded tool file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/finish.tool.js
[GEMINI-DEBUG] Loading tool file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/listTools.tool.js
[_internalLoadTools] Successfully loaded tool file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/listTools.tool.js
[GEMINI-DEBUG] Loading tool file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/manageTodoList.tool.js
[_internalLoadTools] Successfully loaded tool file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/manageTodoList.tool.js
[GEMINI-DEBUG] Loading tool file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/unifiedTodoList.tool.js
[_internalLoadTools] Successfully loaded tool file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/unifiedTodoList.tool.js
[GEMINI-DEBUG] Loading tool file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/web/browser.tool.js
[_internalLoadTools] Successfully loaded tool file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/web/browser.tool.js
24 tools have been loaded dynamically.
[getToolsDir] Constructed tools path: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions
Worker initialisé et prêt à traiter les jobs.
{"level":30,"time":1756004293288,"pid":1102381,"hostname":"tiloup","msg":"[_internalLoadTools] Found tool files: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/ai/summarize.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/clientConsole.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/code/executeShellCommand.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/fs/editFile.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/fs/listDirectory.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/fs/readFile.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/fs/simpleList.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/fs/writeFile.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/planning/projectPlanning.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/search/webNavigate.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/search/webSearch.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/search/webSearchApi.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/agentResponse.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/agentThought.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/createTool.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/delegateTask.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/displayCanvas.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/echo.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/enhancedTodoList.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/finish.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/listTools.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/manageTodoList.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/unifiedTodoList.tool.js, /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/web/browser.tool.js"}
{"level":30,"time":1756004293291,"pid":1102381,"hostname":"tiloup","file":"/home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/ai/summarize.tool.js","toolName":"ai_summarize","msg":"[loadToolFile] Successfully registered tool."}
{"level":30,"time":1756004293291,"pid":1102381,"hostname":"tiloup","msg":"[_internalLoadTools] Successfully loaded tool file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/ai/summarize.tool.js"}
{"level":30,"time":1756004293293,"pid":1102381,"hostname":"tiloup","file":"/home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/clientConsole.tool.js","toolName":"client_console","msg":"[loadToolFile] Successfully registered tool."}
{"level":30,"time":1756004293293,"pid":1102381,"hostname":"tiloup","msg":"[_internalLoadTools] Successfully loaded tool file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/clientConsole.tool.js"}
{"level":30,"time":1756004293296,"pid":1102381,"hostname":"tiloup","file":"/home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/code/executeShellCommand.tool.js","toolName":"executeShellCommand","msg":"[loadToolFile] Successfully registered tool."}
{"level":30,"time":1756004293296,"pid":1102381,"hostname":"tiloup","msg":"[_internalLoadTools] Successfully loaded tool file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/code/executeShellCommand.tool.js"}
{"level":30,"time":1756004293299,"pid":1102381,"hostname":"tiloup","file":"/home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/fs/editFile.tool.js","toolName":"editFile","msg":"[loadToolFile] Successfully registered tool."}
{"level":30,"time":1756004293299,"pid":1102381,"hostname":"tiloup","msg":"[_internalLoadTools] Successfully loaded tool file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/fs/editFile.tool.js"}
{"level":30,"time":1756004293301,"pid":1102381,"hostname":"tiloup","file":"/home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/fs/listDirectory.tool.js","toolName":"listFiles","msg":"[loadToolFile] Successfully registered tool."}
{"level":30,"time":1756004293302,"pid":1102381,"hostname":"tiloup","msg":"[_internalLoadTools] Successfully loaded tool file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/fs/listDirectory.tool.js"}
{"level":30,"time":1756004293305,"pid":1102381,"hostname":"tiloup","file":"/home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/fs/readFile.tool.js","toolName":"readFile","msg":"[loadToolFile] Successfully registered tool."}
{"level":30,"time":1756004293305,"pid":1102381,"hostname":"tiloup","msg":"[_internalLoadTools] Successfully loaded tool file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/fs/readFile.tool.js"}
{"level":30,"time":1756004293307,"pid":1102381,"hostname":"tiloup","file":"/home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/fs/simpleList.tool.js","toolName":"simpleList","msg":"[loadToolFile] Successfully registered tool."}
{"level":30,"time":1756004293307,"pid":1102381,"hostname":"tiloup","msg":"[_internalLoadTools] Successfully loaded tool file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/fs/simpleList.tool.js"}
{"level":30,"time":1756004293309,"pid":1102381,"hostname":"tiloup","file":"/home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/fs/writeFile.tool.js","toolName":"writeFile","msg":"[loadToolFile] Successfully registered tool."}
{"level":30,"time":1756004293309,"pid":1102381,"hostname":"tiloup","msg":"[_internalLoadTools] Successfully loaded tool file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/fs/writeFile.tool.js"}
{"level":30,"time":1756004293313,"pid":1102381,"hostname":"tiloup","file":"/home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/planning/projectPlanning.tool.js","toolName":"project_planning","msg":"[loadToolFile] Successfully registered tool."}
{"level":30,"time":1756004293313,"pid":1102381,"hostname":"tiloup","msg":"[_internalLoadTools] Successfully loaded tool file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/planning/projectPlanning.tool.js"}
{"level":30,"time":1756004293614,"pid":1102381,"hostname":"tiloup","file":"/home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/search/webNavigate.tool.js","toolName":"webNavigate","msg":"[loadToolFile] Successfully registered tool."}
{"level":30,"time":1756004293615,"pid":1102381,"hostname":"tiloup","msg":"[_internalLoadTools] Successfully loaded tool file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/search/webNavigate.tool.js"}
{"level":30,"time":1756004293899,"pid":1102381,"hostname":"tiloup","file":"/home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/search/webSearch.tool.js","toolName":"webSearch","msg":"[loadToolFile] Successfully registered tool."}
{"level":30,"time":1756004293899,"pid":1102381,"hostname":"tiloup","msg":"[_internalLoadTools] Successfully loaded tool file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/search/webSearch.tool.js"}
{"level":30,"time":1756004293901,"pid":1102381,"hostname":"tiloup","file":"/home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/search/webSearchApi.tool.js","toolName":"webSearchApi","msg":"[loadToolFile] Successfully registered tool."}
{"level":30,"time":1756004293901,"pid":1102381,"hostname":"tiloup","msg":"[_internalLoadTools] Successfully loaded tool file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/search/webSearchApi.tool.js"}
{"level":30,"time":1756004293903,"pid":1102381,"hostname":"tiloup","file":"/home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/agentResponse.tool.js","toolName":"agentResponse","msg":"[loadToolFile] Successfully registered tool."}
{"level":30,"time":1756004293903,"pid":1102381,"hostname":"tiloup","msg":"[_internalLoadTools] Successfully loaded tool file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/agentResponse.tool.js"}
{"level":30,"time":1756004293905,"pid":1102381,"hostname":"tiloup","file":"/home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/agentThought.tool.js","toolName":"agent_thought","msg":"[loadToolFile] Successfully registered tool."}
{"level":30,"time":1756004293905,"pid":1102381,"hostname":"tiloup","msg":"[_internalLoadTools] Successfully loaded tool file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/agentThought.tool.js"}
{"level":30,"time":1756004293909,"pid":1102381,"hostname":"tiloup","file":"/home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/createTool.tool.js","toolName":"system_createTool","msg":"[loadToolFile] Successfully registered tool."}
{"level":30,"time":1756004293909,"pid":1102381,"hostname":"tiloup","msg":"[_internalLoadTools] Successfully loaded tool file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/createTool.tool.js"}
{"level":30,"time":1756004293930,"pid":1102381,"hostname":"tiloup","file":"/home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/delegateTask.tool.js","toolName":"delegateTask","msg":"[loadToolFile] Successfully registered tool."}
{"level":30,"time":1756004293931,"pid":1102381,"hostname":"tiloup","msg":"[_internalLoadTools] Successfully loaded tool file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/delegateTask.tool.js"}
{"level":30,"time":1756004293938,"pid":1102381,"hostname":"tiloup","file":"/home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/displayCanvas.tool.js","toolName":"display_canvas","msg":"[loadToolFile] Successfully registered tool."}
{"level":30,"time":1756004293938,"pid":1102381,"hostname":"tiloup","msg":"[_internalLoadTools] Successfully loaded tool file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/displayCanvas.tool.js"}
{"level":30,"time":1756004293940,"pid":1102381,"hostname":"tiloup","file":"/home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/echo.tool.js","toolName":"echo","msg":"[loadToolFile] Successfully registered tool."}
{"level":30,"time":1756004293940,"pid":1102381,"hostname":"tiloup","msg":"[_internalLoadTools] Successfully loaded tool file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/echo.tool.js"}
{"level":30,"time":1756004293945,"pid":1102381,"hostname":"tiloup","file":"/home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/enhancedTodoList.tool.js","toolName":"enhanced_todo_list","msg":"[loadToolFile] Successfully registered tool."}
{"level":30,"time":1756004293945,"pid":1102381,"hostname":"tiloup","msg":"[_internalLoadTools] Successfully loaded tool file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/enhancedTodoList.tool.js"}
{"level":30,"time":1756004293946,"pid":1102381,"hostname":"tiloup","file":"/home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/finish.tool.js","toolName":"finish","msg":"[loadToolFile] Successfully registered tool."}
{"level":30,"time":1756004293946,"pid":1102381,"hostname":"tiloup","msg":"[_internalLoadTools] Successfully loaded tool file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/finish.tool.js"}
{"level":30,"time":1756004293948,"pid":1102381,"hostname":"tiloup","file":"/home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/listTools.tool.js","toolName":"listTools","msg":"[loadToolFile] Successfully registered tool."}
{"level":30,"time":1756004293949,"pid":1102381,"hostname":"tiloup","msg":"[_internalLoadTools] Successfully loaded tool file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/listTools.tool.js"}
{"level":30,"time":1756004293952,"pid":1102381,"hostname":"tiloup","file":"/home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/manageTodoList.tool.js","toolName":"manage_todo_list","msg":"[loadToolFile] Successfully registered tool."}
{"level":50,"time":1756004293952,"pid":1102381,"hostname":"tiloup","message":"Tool with name manage_todo_list already registered.","name":"UserError","stack":"UserError: Tool with name manage_todo_list already registered.\n    at _ToolRegistry.register (file:///home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/chunk-WG6XU6O4.js:67:13)\n    at loadToolFile (file:///home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/chunk-S6Z5ZD2I.js:182:24)\n    at async _internalLoadTools (file:///home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/chunk-S6Z5ZD2I.js:52:7)\n    at async getTools (file:///home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/chunk-S6Z5ZD2I.js:88:5)\n    at async initializeWorker (file:///home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/chunk-AA4PRHQ4.js:2546:17)","file":"/home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/manageTodoList.tool.js","logContext":"[loadToolFile] Failed to dynamically load or process tool file."}
{"level":30,"time":1756004293952,"pid":1102381,"hostname":"tiloup","msg":"[_internalLoadTools] Successfully loaded tool file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/manageTodoList.tool.js"}
{"level":30,"time":1756004293956,"pid":1102381,"hostname":"tiloup","file":"/home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/unifiedTodoList.tool.js","toolName":"unified_todo_list","msg":"[loadToolFile] Successfully registered tool."}
{"level":30,"time":1756004293956,"pid":1102381,"hostname":"tiloup","msg":"[_internalLoadTools] Successfully loaded tool file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/system/unifiedTodoList.tool.js"}
{"level":30,"time":1756004294331,"pid":1102381,"hostname":"tiloup","file":"/home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/web/browser.tool.js","toolName":"browser","msg":"[loadToolFile] Successfully registered tool."}
{"level":30,"time":1756004294331,"pid":1102381,"hostname":"tiloup","msg":"[_internalLoadTools] Successfully loaded tool file: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions/web/browser.tool.js"}
{"level":30,"time":1756004294332,"pid":1102381,"hostname":"tiloup","msg":"24 tools have been loaded dynamically."}
{"level":30,"time":1756004294332,"pid":1102381,"hostname":"tiloup","msg":"[watchTools] Watching for tool changes in: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/modules/tools/definitions"}
{"level":30,"time":1756004294332,"pid":1102381,"hostname":"tiloup","msg":"[watchTools] Also watching generated tools in: /home/demon/agentforge/AgenticForge2/AgenticForge/packages/core/dist/tools/generated"}
{"level":30,"time":1756004294334,"pid":1102381,"hostname":"tiloup","msg":"24 tools detected at startup"}
{"level":30,"time":1756004294352,"pid":1102381,"hostname":"tiloup","msg":"[watchTools] Initial scan complete. Ready for changes."}
{"level":30,"time":1756004294352,"pid":1102381,"hostname":"tiloup","msg":"[watchTools] Initial scan complete. Ready for changes."}
{"level":30,"time":1756004294355,"pid":1102381,"hostname":"tiloup","msg":"PostgreSQL sessions table ensured."}
{"level":30,"time":1756004294358,"pid":1102381,"hostname":"tiloup","msg":"Worker initialisé et prêt à traiter les jobs."}
{"level":30,"time":1756004310487,"pid":1102381,"hostname":"tiloup","jobId":"213","sessionId":"test-frontend-1755645326399","msg":"Traitement du job 213"}
{"level":30,"time":1756004310587,"pid":1102381,"hostname":"tiloup","jobId":"213","sessionId":"test-frontend-1755645326399","msg":"Job 213 starting after synchronization delay"}
{"level":30,"time":1756004310651,"pid":1102381,"hostname":"tiloup","sessionId":"test-frontend-1755645326399","msg":"Created new session data from PostgreSQL."}
{"level":30,"time":1756004310651,"pid":1102381,"hostname":"tiloup","jobId":"213","sessionId":"test-frontend-1755645326399","msg":"Agent starting with 24 tools available"}
{"level":30,"time":1756004310651,"pid":1102381,"hostname":"tiloup","jobId":"213","sessionId":"test-frontend-1755645326399","msg":"Agent execution starting..."}
{"level":30,"time":1756004310652,"pid":1102381,"hostname":"tiloup","jobId":"213","sessionId":"test-frontend-1755645326399","msg":"Agent starting..."}
{"level":30,"time":1756004310655,"pid":1102381,"hostname":"tiloup","jobId":"213","sessionId":"test-frontend-1755645326399","msg":"Subscribed to job:213:interrupt. Total subscriptions: 1"}
{"level":30,"time":1756004310656,"pid":1102381,"hostname":"tiloup","jobId":"213","sessionId":"test-frontend-1755645326399","iteration":1,"msg":"Agent iteration starting"}
{"level":30,"time":1756004310656,"pid":1102381,"hostname":"tiloup","jobId":"213","sessionId":"test-frontend-1755645326399","channel":"job:213:events","dataType":"agent_thought","message":"{\"content\":\"The agent is thinking... (iteration 1)\",\"id\":\"89d05f3c-a492-40bc-90da-e35e83fd20dd\",\"timestamp\":1756004310656,\"type\":\"agent_thought\"}","msg":"[PUBLISH] Publishing message to Redis channel"}
{"level":30,"time":1756004310656,"pid":1102381,"hostname":"tiloup","jobId":"213","sessionId":"test-frontend-1755645326399","msg":"[PUBLISH] Message published to Redis successfully"}
{"level":30,"time":1756004310665,"pid":1102381,"hostname":"tiloup","jobId":"213","sessionId":"test-frontend-1755645326399","msg":"Attempting LLM call with provider: qwen"}
{"level":30,"time":1756004310671,"pid":1102381,"hostname":"tiloup","module":"QwenProvider","msg":"Trying Qwen API endpoint: https://portal.qwen.ai/v1/chat/completions"}
{"level":30,"time":1756004310671,"pid":1102381,"hostname":"tiloup","module":"QwenProvider","msg":"[LLM CALL] Sending request to model: qwen3-coder-plus via qwen at https://portal.qwen.ai/v1/chat/completions (attempt 1/5)"}
{"level":50,"time":1756004340679,"pid":1102381,"hostname":"tiloup","module":"QwenProvider","error":{},"msg":"Failed to get response from LLM"}
{"level":40,"time":1756004340679,"pid":1102381,"hostname":"tiloup","module":"QwenProvider","msg":"Network error encountered. Retrying... (attempt 1/5)"}
{"level":30,"time":1756004340679,"pid":1102381,"hostname":"tiloup","module":"QwenProvider","msg":"Adding delay of 1000ms before Qwen API call (attempt 2/5)"}
{"level":30,"time":1756004341679,"pid":1102381,"hostname":"tiloup","module":"QwenProvider","msg":"[LLM CALL] Sending request to model: qwen3-coder-plus via qwen at https://portal.qwen.ai/v1/chat/completions (attempt 2/5)"}
{"level":50,"time":1756004371680,"pid":1102381,"hostname":"tiloup","module":"QwenProvider","error":{},"msg":"Failed to get response from LLM"}
{"level":40,"time":1756004371680,"pid":1102381,"hostname":"tiloup","module":"QwenProvider","msg":"Network error encountered. Retrying... (attempt 2/5)"}
{"level":30,"time":1756004371680,"pid":1102381,"hostname":"tiloup","module":"QwenProvider","msg":"Adding delay of 2000ms before Qwen API call (attempt 3/5)"}
{"level":30,"time":1756004373680,"pid":1102381,"hostname":"tiloup","module":"QwenProvider","msg":"[LLM CALL] Sending request to model: qwen3-coder-plus via qwen at https://portal.qwen.ai/v1/chat/completions (attempt 3/5)"}
[CANVAS] Attempting to send to canvas for job 213, type: html, content length: 323
[CANVAS] Channel: job:213:events
[CANVAS] Message: {"content":"<div style='padding: 20px; text-align: center; background: #f3f4f6; border-radius: 8px;'><h2 style='color: #ef4444;'>Content Filtered</h2><p style='color: #6b7280;'>Agent thoughts and debugging content are not displayed in canvas. Use the thought field instead for internal reasoning that appears as chat bubbles.</p></div>","contentType":"html","type":"agent_canvas_output"}
[CANVAS] Redis publish result: Promise { <pending> }
[CANVAS] Content sent to canvas for job 213
{"level":30,"time":1756004400868,"pid":1102381,"hostname":"tiloup","apiKey":"SVBp87e2WX...","provider":"qwen","msg":"LLM API key status reset."}
{"level":30,"time":1756004400884,"pid":1102381,"hostname":"tiloup","sessionId":"test-frontend-1755645326399","msg":"Session history saved to PostgreSQL."}
{"level":30,"time":1756004400884,"pid":1102381,"hostname":"tiloup","jobId":"213","sessionId":"test-frontend-1755645326399","llmResponse":"L'utilisateur souhaite continuer le projet Duke Nukem 2. Je vois que nous avons déjà une todo list avec 9 tâches pour le développement du jeu. La première tâche \"Créer le moteur de jeu HTML5 Canvas avec physique et collisions\" est actuellement en cours. Je vais continuer à travailler sur cette tâche en créant le moteur de jeu.\n\nTool Call: writeFile with params {\"path\":\"dukenukem2-engine.html\",\"content\":\"<!DOCTYPE html>\\n<html>\\n<head>\\n    <title>Duke Nukem 2 - Moteur de Jeu</title>\\n    <style>\\n        body {\\n            margin: 0;\\n            padding: 0;\\n            background-color: #000;\\n            display: flex;\\n            justify-content: center;\\n            align-items: center;\\n            height: 100vh;\\n            font-family: 'Courier New', monospace;\\n        }\\n        \\n        #gameCanvas {\\n            border: 2px solid #fff;\\n            background-color: #000;\\n        }\\n        \\n        #gameContainer {\\n            position: relative;\\n        }\\n        \\n        #loadingScreen {\\n            position: absolute;\\n            top: 0;\\n            left: 0;\\n            width: 100%;\\n            height: 100%;\\n            background-color: #000;\\n            color: #fff;\\n            display: flex;\\n            flex-direction: column;\\n            justify-content: center;\\n            align-items: center;\\n            z-index: 10;\\n        }\\n        \\n        .loadingText {\\n            font-size: 24px;\\n            margin-bottom: 20px;\\n        }\\n        \\n        .progressBar {\\n            width: 300px;\\n            height: 20px;\\n            border: 2px solid #fff;\\n            background-color: #000;\\n        }\\n        \\n        .progress {\\n            height: 100%;\\n            width: 0%;\\n            background-color: #00f;\\n            transition: width 0.3s;\\n        }\\n    </style>\\n</head>\\n<body>\\n    <div id=\\\"gameContainer\\\">\\n        <div id=\\\"loadingScreen\\\">\\n            <div class=\\\"loadingText\\\">Chargement du moteur de jeu Duke Nukem 2...</div>\\n            <div class=\\\"progressBar\\\">\\n                <div class=\\\"progress\\\" id=\\\"progressBar\\\"></div>\\n            </div>\\n        </div>\\n        <canvas id=\\\"gameCanvas\\\" width=\\\"800\\\" height=\\\"600\\\"></canvas>\\n    </div>\\n\\n    <script>\\n        // Variables du jeu\\n        const canvas = document.getElementById('gameCanvas');\\n        const ctx = canvas.getContext('2d');\\n        const loadingScreen = document.getElementById('loadingScreen');\\n        const progressBar = document.getElementById('progressBar');\\n        \\n        // Paramètres du jeu\\n        const GRAVITY = 0.5;\\n        const FRICTION = 0.8;\\n        \\n        // Objets du jeu\\n        let player = {\\n            x: 50,\\n            y: 300,\\n            width: 30,\\n            height: 50,\\n            velocityX: 0,\\n            velocityY: 0,\\n            speed: 5,\\n            jumpForce: 12,\\n            isJumping: false,\\n            color: '#ff0000'\\n        };\\n        \\n        let platforms = [\\n            {x: 0, y: 550, width: 800, height: 50, color: '#00ff00'},\\n            {x: 200, y: 450, width: 100, height: 20, color: '#00ff00'},\\n            {x: 400, y: 350, width: 100, height: 20, color: '#00ff00'},\\n            {x: 600, y: 250, width: 100, height: 20, color: '#00ff00'}\\n        ];\\n        \\n        //Touches\\n        let keys = {};\\n        \\n        // Événements clavier\\n        window.addEventListener('keydown', function(e) {\\n            keys[e.key] = true;\\n        });\\n        \\n        window.addEventListener('keyup', function(e) {\\n            keys[e.key] = false;\\n        });\\n        \\n        // Fonction de collision\\n        function checkCollision(obj1, obj2) {\\n            return obj1.x < obj2.x + obj2.width &&\\n                   obj1.x + obj1.width > obj2.x &&\\n                   obj1.y < obj2.y + obj2.height &&\\n                   obj1.y + obj1.height > obj2.y;\\n        }\\n        \\n        // Fonction de collision avec les plateformes\\n        function checkPlatformCollision() {\\n            player.isJumping = true;\\n            \\n            for (let i = 0; i < platforms.length; i++) {\\n                let platform = platforms[i];\\n                \\n                // Vérifier si le joueur est au-dessus de la plateforme et tombe\\n                if (player.velocityY > 0 &&\\n                    player.y + player.height <= platform.y &&\\n                    player.y + player.height + player.velocityY > platform.y &&\\n                    player.x + player.width > platform.x &&\\n                    player.x < platform.x + platform.width) {\\n                    \\n                    player.y = platform.y - player.height;\\n                    player.velocityY = 0;\\n                    player.isJumping = false;\\n                }\\n            }\\n        }\\n        \\n        // Mise à jour du joueur\\n        function updatePlayer() {\\n            // Mouvement horizontal\\n            if (keys['ArrowLeft'] || keys['q']) {\\n                player.velocityX = -player.speed;\\n            } else if (keys['ArrowRight'] || keys['d']) {\\n                player.velocityX = player.speed;\\n            } else {\\n                player.velocityX *= FRICTION;\\n            }\\n            \\n            // Saut\\n            if ((keys['ArrowUp'] || keys['z'] || keys[' ']) && !player.isJumping) {\\n                player.velocityY = -player.jumpForce;\\n                player.isJumping = true;\\n            }\\n            \\n            // Appliquer la gravité\\n            player.velocityY += GRAVITY;\\n            \\n            // Mettre à jour la position\\n            player.x += player.velocityX;\\n            player.y += player.velocityY;\\n            \\n            // Vérifier les collisions avec les plateformes\\n            checkPlatformCollision();\\n            \\n            // Empêcher le joueur de sortir de l'écran\\n            if (player.x < 0) {\\n                player.x = 0;\\n            }\\n            if (player.x + player.width > canvas.width) {\\n                player.x = canvas.width - player.width;\\n            }\\n            if (player.y > canvas.height) {\\n                player.y = 300;\\n                player.x = 50;\\n                player.velocityY = 0;\\n            }\\n        }\\n        \\n        // Dessiner le joueur\\n        function drawPlayer() {\\n            ctx.fillStyle = player.color;\\n            ctx.fillRect(player.x, player.y, player.width, player.height);\\n            \\n            // Dessiner un visage simple\\n            ctx.fillStyle = '#000';\\n            ctx.fillRect(player.x + 20, player.y + 15, 5, 5); // Œil\\n            ctx.fillRect(player.x + 10, player.y + 30, 15, 3); // Bouche\\n        }\\n        \\n        // Dessiner les plateformes\\n        function drawPlatforms() {\\n            for (let i = 0; i < platforms.length; i++) {\\n                let platform = platforms[i];\\n                ctx.fillStyle = platform.color;\\n                ctx.fillRect(platform.x, platform.y, platform.width, platform.height);\\n            }\\n        }\\n        \\n        // Boucle du jeu\\n        function gameLoop() {\\n            // Effacer le canvas\\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\\n            \\n            // Mettre à jour le joueur\\n            updatePlayer();\\n            \\n            // Dessiner les éléments du jeu\\n            drawPlatforms();\\n            drawPlayer();\\n            \\n            // Continuer la boucle\\n            requestAnimationFrame(gameLoop);\\n        }\\n        \\n        // Simulation de chargement\\n        function simulateLoading()","provider":"qwen","msg":"Raw LLM response"}
{"level":50,"time":1756004400885,"pid":1102381,"hostname":"tiloup","jobId":"213","sessionId":"test-frontend-1755645326399","iteration":1,"error":{},"llmResponse":"L'utilisateur souhaite continuer le projet Duke Nukem 2. Je vois que nous avons déjà une todo list avec 9 tâches pour le développement du jeu. La première tâche \"Créer le moteur de jeu HTML5 Canvas avec physique et collisions\" est actuellement en cours. Je vais continuer à travailler sur cette tâche en créant le moteur de jeu.\n\nTool Call: writeFile with params {\"path\":\"dukenukem2-engine.html\",\"content\":\"<!DOCTYPE html>\\n<html>\\n<head>\\n    <title>Duke Nukem 2 - Moteur de Jeu</title>\\n    <style>\\n        body {\\n            margin: 0;\\n            padding: 0;\\n            background-color: #000;\\n            display: flex;\\n            justify-content: center;\\n            align-items: center;\\n            height: 100vh;\\n            font-family: 'Courier New', monospace;\\n        }\\n        \\n        #gameCanvas {\\n            border: 2px solid #fff;\\n            background-color: #000;\\n        }\\n        \\n        #gameContainer {\\n            position: relative;\\n        }\\n        \\n        #loadingScreen {\\n            position: absolute;\\n            top: 0;\\n            left: 0;\\n            width: 100%;\\n            height: 100%;\\n            background-color: #000;\\n            color: #fff;\\n            display: flex;\\n            flex-direction: column;\\n            justify-content: center;\\n            align-items: center;\\n            z-index: 10;\\n        }\\n        \\n        .loadingText {\\n            font-size: 24px;\\n            margin-bottom: 20px;\\n        }\\n        \\n        .progressBar {\\n            width: 300px;\\n            height: 20px;\\n            border: 2px solid #fff;\\n            background-color: #000;\\n        }\\n        \\n        .progress {\\n            height: 100%;\\n            width: 0%;\\n            background-color: #00f;\\n            transition: width 0.3s;\\n        }\\n    </style>\\n</head>\\n<body>\\n    <div id=\\\"gameContainer\\\">\\n        <div id=\\\"loadingScreen\\\">\\n            <div class=\\\"loadingText\\\">Chargement du moteur de jeu Duke Nukem 2...</div>\\n            <div class=\\\"progressBar\\\">\\n                <div class=\\\"progress\\\" id=\\\"progressBar\\\"></div>\\n            </div>\\n        </div>\\n        <canvas id=\\\"gameCanvas\\\" width=\\\"800\\\" height=\\\"600\\\"></canvas>\\n    </div>\\n\\n    <script>\\n        // Variables du jeu\\n        const canvas = document.getElementById('gameCanvas');\\n        const ctx = canvas.getContext('2d');\\n        const loadingScreen = document.getElementById('loadingScreen');\\n        const progressBar = document.getElementById('progressBar');\\n        \\n        // Paramètres du jeu\\n        const GRAVITY = 0.5;\\n        const FRICTION = 0.8;\\n        \\n        // Objets du jeu\\n        let player = {\\n            x: 50,\\n            y: 300,\\n            width: 30,\\n            height: 50,\\n            velocityX: 0,\\n            velocityY: 0,\\n            speed: 5,\\n            jumpForce: 12,\\n            isJumping: false,\\n            color: '#ff0000'\\n        };\\n        \\n        let platforms = [\\n            {x: 0, y: 550, width: 800, height: 50, color: '#00ff00'},\\n            {x: 200, y: 450, width: 100, height: 20, color: '#00ff00'},\\n            {x: 400, y: 350, width: 100, height: 20, color: '#00ff00'},\\n            {x: 600, y: 250, width: 100, height: 20, color: '#00ff00'}\\n        ];\\n        \\n        //Touches\\n        let keys = {};\\n        \\n        // Événements clavier\\n        window.addEventListener('keydown', function(e) {\\n            keys[e.key] = true;\\n        });\\n        \\n        window.addEventListener('keyup', function(e) {\\n            keys[e.key] = false;\\n        });\\n        \\n        // Fonction de collision\\n        function checkCollision(obj1, obj2) {\\n            return obj1.x < obj2.x + obj2.width &&\\n                   obj1.x + obj1.width > obj2.x &&\\n                   obj1.y < obj2.y + obj2.height &&\\n                   obj1.y + obj1.height > obj2.y;\\n        }\\n        \\n        // Fonction de collision avec les plateformes\\n        function checkPlatformCollision() {\\n            player.isJumping = true;\\n            \\n            for (let i = 0; i < platforms.length; i++) {\\n                let platform = platforms[i];\\n                \\n                // Vérifier si le joueur est au-dessus de la plateforme et tombe\\n                if (player.velocityY > 0 &&\\n                    player.y + player.height <= platform.y &&\\n                    player.y + player.height + player.velocityY > platform.y &&\\n                    player.x + player.width > platform.x &&\\n                    player.x < platform.x + platform.width) {\\n                    \\n                    player.y = platform.y - player.height;\\n                    player.velocityY = 0;\\n                    player.isJumping = false;\\n                }\\n            }\\n        }\\n        \\n        // Mise à jour du joueur\\n        function updatePlayer() {\\n            // Mouvement horizontal\\n            if (keys['ArrowLeft'] || keys['q']) {\\n                player.velocityX = -player.speed;\\n            } else if (keys['ArrowRight'] || keys['d']) {\\n                player.velocityX = player.speed;\\n            } else {\\n                player.velocityX *= FRICTION;\\n            }\\n            \\n            // Saut\\n            if ((keys['ArrowUp'] || keys['z'] || keys[' ']) && !player.isJumping) {\\n                player.velocityY = -player.jumpForce;\\n                player.isJumping = true;\\n            }\\n            \\n            // Appliquer la gravité\\n            player.velocityY += GRAVITY;\\n            \\n            // Mettre à jour la position\\n            player.x += player.velocityX;\\n            player.y += player.velocityY;\\n            \\n            // Vérifier les collisions avec les plateformes\\n            checkPlatformCollision();\\n            \\n            // Empêcher le joueur de sortir de l'écran\\n            if (player.x < 0) {\\n                player.x = 0;\\n            }\\n            if (player.x + player.width > canvas.width) {\\n                player.x = canvas.width - player.width;\\n            }\\n            if (player.y > canvas.height) {\\n                player.y = 300;\\n                player.x = 50;\\n                player.velocityY = 0;\\n            }\\n        }\\n        \\n        // Dessiner le joueur\\n        function drawPlayer() {\\n            ctx.fillStyle = player.color;\\n            ctx.fillRect(player.x, player.y, player.width, player.height);\\n            \\n            // Dessiner un visage simple\\n            ctx.fillStyle = '#000';\\n            ctx.fillRect(player.x + 20, player.y + 15, 5, 5); // Œil\\n            ctx.fillRect(player.x + 10, player.y + 30, 15, 3); // Bouche\\n        }\\n        \\n        // Dessiner les plateformes\\n        function drawPlatforms() {\\n            for (let i = 0; i < platforms.length; i++) {\\n                let platform = platforms[i];\\n                ctx.fillStyle = platform.color;\\n                ctx.fillRect(platform.x, platform.y, platform.width, platform.height);\\n            }\\n        }\\n        \\n        // Boucle du jeu\\n        function gameLoop() {\\n            // Effacer le canvas\\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\\n            \\n            // Mettre à jour le joueur\\n            updatePlayer();\\n            \\n            // Dessiner les éléments du jeu\\n            drawPlatforms();\\n            drawPlayer();\\n            \\n            // Continuer la boucle\\n            requestAnimationFrame(gameLoop);\\n        }\\n        \\n        // Simulation de chargement\\n        function simulateLoading()","msg":"Failed to parse LLM response"}
{"level":30,"time":1756004400887,"pid":1102381,"hostname":"tiloup","jobId":"213","sessionId":"test-frontend-1755645326399","iteration":1,"thought":"L'utilisateur veut afficher quelque chose dans le canvas.","msg":"Agent thought"}
{"level":30,"time":1756004400887,"pid":1102381,"hostname":"tiloup","jobId":"213","sessionId":"test-frontend-1755645326399","channel":"job:213:events","dataType":"agent_thought","message":"{\"content\":\"L'utilisateur veut afficher quelque chose dans le canvas.\",\"type\":\"agent_thought\"}","msg":"[PUBLISH] Publishing message to Redis channel"}
{"level":30,"time":1756004400887,"pid":1102381,"hostname":"tiloup","jobId":"213","sessionId":"test-frontend-1755645326399","msg":"[PUBLISH] Message published to Redis successfully"}
{"level":30,"time":1756004400888,"pid":1102381,"hostname":"tiloup","jobId":"213","sessionId":"test-frontend-1755645326399","channel":"job:213:events","dataType":"tool.start","message":"{\"data\":{\"args\":{\"content\":\"<div><h1>Canvas Display</h1><p>L'utilisateur souhaite continuer le projet Duke Nukem 2. Je vois que nous avons déjà une todo list avec 9 tâches pour le développement du jeu. La première tâche \\\"Créer le moteur de jeu HTML5 Canvas avec physique et collisions\\\" est actuellement en cours. Je vais continuer à travailler sur cette tâche en créant le moteur de jeu.\\n\\nTool Call: writeFile with params {\\\"path\\\":\\\"dukenukem2-engine.html\\\",\\\"content\\\":\\\"<!DOCTYPE html>\\\\n<html>\\\\n<head>\\\\n    <title>Duke Nukem 2 - Moteur de Jeu</title>\\\\n    <style>\\\\n        body {\\\\n            margin: 0;\\\\n            padding: 0;\\\\n            background-color: #000;\\\\n            display: flex;\\\\n            justify-content: center;\\\\n            align-items: center;\\\\n            height: 100vh;\\\\n            font-family: 'Courier New', monospace;\\\\n        }\\\\n        \\\\n        #gameCanvas {\\\\n            border: 2px solid #fff;\\\\n            background-color: #000;\\\\n        }\\\\n        \\\\n        #gameContainer {\\\\n            position: relative;\\\\n        }\\\\n        \\\\n        #loadingScreen {\\\\n            position: absolute;\\\\n            top: 0;\\\\n            left: 0;\\\\n            width: 100%;\\\\n            height: 100%;\\\\n            background-color: #000;\\\\n            color: #fff;\\\\n            display: flex;\\\\n            flex-direction: column;\\\\n            justify-content: center;\\\\n            align-items: center;\\\\n            z-index: 10;\\\\n        }\\\\n        \\\\n        .loadingText {\\\\n            font-size: 24px;\\\\n            margin-bottom: 20px;\\\\n        }\\\\n        \\\\n        .progressBar {\\\\n            width: 300px;\\\\n            height: 20px;\\\\n            border: 2px solid #fff;\\\\n            background-color: #000;\\\\n        }\\\\n        \\\\n        .progress {\\\\n            height: 100%;\\\\n            width: 0%;\\\\n            background-color: #00f;\\\\n            transition: width 0.3s;\\\\n        }\\\\n    </style>\\\\n</head>\\\\n<body>\\\\n    <div id=\\\\\\\"gameContainer\\\\\\\">\\\\n        <div id=\\\\\\\"loadingScreen\\\\\\\">\\\\n            <div class=\\\\\\\"loadingText\\\\\\\">Chargement du moteur de jeu Duke Nukem 2...</div>\\\\n            <div class=\\\\\\\"progressBar\\\\\\\">\\\\n                <div class=\\\\\\\"progress\\\\\\\" id=\\\\\\\"progressBar\\\\\\\"></div>\\\\n            </div>\\\\n        </div>\\\\n        <canvas id=\\\\\\\"gameCanvas\\\\\\\" width=\\\\\\\"800\\\\\\\" height=\\\\\\\"600\\\\\\\"></canvas>\\\\n    </div>\\\\n\\\\n    <script>\\\\n        // Variables du jeu\\\\n        const canvas = document.getElementById('gameCanvas');\\\\n        const ctx = canvas.getContext('2d');\\\\n        const loadingScreen = document.getElementById('loadingScreen');\\\\n        const progressBar = document.getElementById('progressBar');\\\\n        \\\\n        // Paramètres du jeu\\\\n        const GRAVITY = 0.5;\\\\n        const FRICTION = 0.8;\\\\n        \\\\n        // Objets du jeu\\\\n        let player = {\\\\n            x: 50,\\\\n            y: 300,\\\\n            width: 30,\\\\n            height: 50,\\\\n            velocityX: 0,\\\\n            velocityY: 0,\\\\n            speed: 5,\\\\n            jumpForce: 12,\\\\n            isJumping: false,\\\\n            color: '#ff0000'\\\\n        };\\\\n        \\\\n        let platforms = [\\\\n            {x: 0, y: 550, width: 800, height: 50, color: '#00ff00'},\\\\n            {x: 200, y: 450, width: 100, height: 20, color: '#00ff00'},\\\\n            {x: 400, y: 350, width: 100, height: 20, color: '#00ff00'},\\\\n            {x: 600, y: 250, width: 100, height: 20, color: '#00ff00'}\\\\n        ];\\\\n        \\\\n        //Touches\\\\n        let keys = {};\\\\n        \\\\n        // Événements clavier\\\\n        window.addEventListener('keydown', function(e) {\\\\n            keys[e.key] = true;\\\\n        });\\\\n        \\\\n        window.addEventListener('keyup', function(e) {\\\\n            keys[e.key] = false;\\\\n        });\\\\n        \\\\n        // Fonction de collision\\\\n        function checkCollision(obj1, obj2) {\\\\n            return obj1.x < obj2.x + obj2.width &&\\\\n                   obj1.x + obj1.width > obj2.x &&\\\\n                   obj1.y < obj2.y + obj2.height &&\\\\n                   obj1.y + obj1.height > obj2.y;\\\\n        }\\\\n        \\\\n        // Fonction de collision avec les plateformes\\\\n        function checkPlatformCollision() {\\\\n            player.isJumping = true;\\\\n            \\\\n            for (let i = 0; i < platforms.length; i++) {\\\\n                let platform = platforms[i];\\\\n                \\\\n                // Vérifier si le joueur est au-dessus de la plateforme et tombe\\\\n                if (player.velocityY > 0 &&\\\\n                    player.y + player.height <= platform.y &&\\\\n                    player.y + player.height + player.velocityY > platform.y &&\\\\n                    player.x + player.width > platform.x &&\\\\n                    player.x < platform.x + platform.width) {\\\\n                    \\\\n                    player.y = platform.y - player.height;\\\\n                    player.velocityY = 0;\\\\n                    player.isJumping = false;\\\\n                }\\\\n            }\\\\n        }\\\\n        \\\\n        // Mise à jour du joueur\\\\n        function updatePlayer() {\\\\n            // Mouvement horizontal\\\\n            if (keys['ArrowLeft'] || keys['q']) {\\\\n                player.velocityX = -player.speed;\\\\n            } else if (keys['ArrowRight'] || keys['d']) {\\\\n                player.velocityX = player.speed;\\\\n            } else {\\\\n                player.velocityX *= FRICTION;\\\\n            }\\\\n            \\\\n            // Saut\\\\n            if ((keys['ArrowUp'] || keys['z'] || keys[' ']) && !player.isJumping) {\\\\n                player.velocityY = -player.jumpForce;\\\\n                player.isJumping = true;\\\\n            }\\\\n            \\\\n            // Appliquer la gravité\\\\n            player.velocityY += GRAVITY;\\\\n            \\\\n            // Mettre à jour la position\\\\n            player.x += player.velocityX;\\\\n            player.y += player.velocityY;\\\\n            \\\\n            // Vérifier les collisions avec les plateformes\\\\n            checkPlatformCollision();\\\\n            \\\\n            // Empêcher le joueur de sortir de l'écran\\\\n            if (player.x < 0) {\\\\n                player.x = 0;\\\\n            }\\\\n            if (player.x + player.width > canvas.width) {\\\\n                player.x = canvas.width - player.width;\\\\n            }\\\\n            if (player.y > canvas.height) {\\\\n                player.y = 300;\\\\n                player.x = 50;\\\\n                player.velocityY = 0;\\\\n            }\\\\n        }\\\\n        \\\\n        // Dessiner le joueur\\\\n        function drawPlayer() {\\\\n            ctx.fillStyle = player.color;\\\\n            ctx.fillRect(player.x, player.y, player.width, player.height);\\\\n            \\\\n            // Dessiner un visage simple\\\\n            ctx.fillStyle = '#000';\\\\n            ctx.fillRect(player.x + 20, player.y + 15, 5, 5); // Œil\\\\n            ctx.fillRect(player.x + 10, player.y + 30, 15, 3); // Bouche\\\\n        }\\\\n        \\\\n        // Dessiner les plateformes\\\\n        function drawPlatforms() {\\\\n            for (let i = 0; i < platforms.length; i++) {\\\\n                let platform = platforms[i];\\\\n                ctx.fillStyle = platform.color;\\\\n                ctx.fillRect(platform.x, platform.y, platform.width, platform.height);\\\\n            }\\\\n        }\\\\n        \\\\n        // Boucle du jeu\\\\n        function gameLoop() {\\\\n            // Effacer le canvas\\\\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\\\\n            \\\\n            // Mettre à jour le joueur\\\\n            updatePlayer();\\\\n            \\\\n            // Dessiner les éléments du jeu\\\\n            drawPlatforms();\\\\n            drawPlayer();\\\\n            \\\\n            // Continuer la boucle\\\\n            requestAnimationFrame(gameLoop);\\\\n        }\\\\n        \\\\n        // Simulation de chargement\\\\n        function simulateLoading()</p></div>\",\"contentType\":\"html\"},\"name\":\"display_canvas\"},\"type\":\"tool.start\"}","msg":"[PUBLISH] Publishing message to Redis channel"}
{"level":30,"time":1756004400888,"pid":1102381,"hostname":"tiloup","jobId":"213","sessionId":"test-frontend-1755645326399","msg":"[PUBLISH] Message published to Redis successfully"}
{"level":30,"time":1756004400889,"pid":1102381,"hostname":"tiloup","jobId":"213","sessionId":"test-frontend-1755645326399","iteration":1,"msg":"Executing tool: display_canvas with params: {\"content\":\"<div><h1>Canvas Display</h1><p>L'utilisateur souhaite continuer le projet Duke Nukem 2. Je vois que nous avons déjà une todo list avec 9 tâches pour le développement du jeu. La première tâche \\\"Créer le moteur de jeu HTML5 Canvas avec physique et collisions\\\" est actuellement en cours. Je vais continuer à travailler sur cette tâche en créant le moteur de jeu.\\n\\nTool Call: writeFile with params {\\\"path\\\":\\\"dukenukem2-engine.html\\\",\\\"content\\\":\\\"<!DOCTYPE html>\\\\n<html>\\\\n<head>\\\\n    <title>Duke Nukem 2 - Moteur de Jeu</title>\\\\n    <style>\\\\n        body {\\\\n            margin: 0;\\\\n            padding: 0;\\\\n            background-color: #000;\\\\n            display: flex;\\\\n            justify-content: center;\\\\n            align-items: center;\\\\n            height: 100vh;\\\\n            font-family: 'Courier New', monospace;\\\\n        }\\\\n        \\\\n        #gameCanvas {\\\\n            border: 2px solid #fff;\\\\n            background-color: #000;\\\\n        }\\\\n        \\\\n        #gameContainer {\\\\n            position: relative;\\\\n        }\\\\n        \\\\n        #loadingScreen {\\\\n            position: absolute;\\\\n            top: 0;\\\\n            left: 0;\\\\n            width: 100%;\\\\n            height: 100%;\\\\n            background-color: #000;\\\\n            color: #fff;\\\\n            display: flex;\\\\n            flex-direction: column;\\\\n            justify-content: center;\\\\n            align-items: center;\\\\n            z-index: 10;\\\\n        }\\\\n        \\\\n        .loadingText {\\\\n            font-size: 24px;\\\\n            margin-bottom: 20px;\\\\n        }\\\\n        \\\\n        .progressBar {\\\\n            width: 300px;\\\\n            height: 20px;\\\\n            border: 2px solid #fff;\\\\n            background-color: #000;\\\\n        }\\\\n        \\\\n        .progress {\\\\n            height: 100%;\\\\n            width: 0%;\\\\n            background-color: #00f;\\\\n            transition: width 0.3s;\\\\n        }\\\\n    </style>\\\\n</head>\\\\n<body>\\\\n    <div id=\\\\\\\"gameContainer\\\\\\\">\\\\n        <div id=\\\\\\\"loadingScreen\\\\\\\">\\\\n            <div class=\\\\\\\"loadingText\\\\\\\">Chargement du moteur de jeu Duke Nukem 2...</div>\\\\n            <div class=\\\\\\\"progressBar\\\\\\\">\\\\n                <div class=\\\\\\\"progress\\\\\\\" id=\\\\\\\"progressBar\\\\\\\"></div>\\\\n            </div>\\\\n        </div>\\\\n        <canvas id=\\\\\\\"gameCanvas\\\\\\\" width=\\\\\\\"800\\\\\\\" height=\\\\\\\"600\\\\\\\"></canvas>\\\\n    </div>\\\\n\\\\n    <script>\\\\n        // Variables du jeu\\\\n        const canvas = document.getElementById('gameCanvas');\\\\n        const ctx = canvas.getContext('2d');\\\\n        const loadingScreen = document.getElementById('loadingScreen');\\\\n        const progressBar = document.getElementById('progressBar');\\\\n        \\\\n        // Paramètres du jeu\\\\n        const GRAVITY = 0.5;\\\\n        const FRICTION = 0.8;\\\\n        \\\\n        // Objets du jeu\\\\n        let player = {\\\\n            x: 50,\\\\n            y: 300,\\\\n            width: 30,\\\\n            height: 50,\\\\n            velocityX: 0,\\\\n            velocityY: 0,\\\\n            speed: 5,\\\\n            jumpForce: 12,\\\\n            isJumping: false,\\\\n            color: '#ff0000'\\\\n        };\\\\n        \\\\n        let platforms = [\\\\n            {x: 0, y: 550, width: 800, height: 50, color: '#00ff00'},\\\\n            {x: 200, y: 450, width: 100, height: 20, color: '#00ff00'},\\\\n            {x: 400, y: 350, width: 100, height: 20, color: '#00ff00'},\\\\n            {x: 600, y: 250, width: 100, height: 20, color: '#00ff00'}\\\\n        ];\\\\n        \\\\n        //Touches\\\\n        let keys = {};\\\\n        \\\\n        // Événements clavier\\\\n        window.addEventListener('keydown', function(e) {\\\\n            keys[e.key] = true;\\\\n        });\\\\n        \\\\n        window.addEventListener('keyup', function(e) {\\\\n            keys[e.key] = false;\\\\n        });\\\\n        \\\\n        // Fonction de collision\\\\n        function checkCollision(obj1, obj2) {\\\\n            return obj1.x < obj2.x + obj2.width &&\\\\n                   obj1.x + obj1.width > obj2.x &&\\\\n                   obj1.y < obj2.y + obj2.height &&\\\\n                   obj1.y + obj1.height > obj2.y;\\\\n        }\\\\n        \\\\n        // Fonction de collision avec les plateformes\\\\n        function checkPlatformCollision() {\\\\n            player.isJumping = true;\\\\n            \\\\n            for (let i = 0; i < platforms.length; i++) {\\\\n                let platform = platforms[i];\\\\n                \\\\n                // Vérifier si le joueur est au-dessus de la plateforme et tombe\\\\n                if (player.velocityY > 0 &&\\\\n                    player.y + player.height <= platform.y &&\\\\n                    player.y + player.height + player.velocityY > platform.y &&\\\\n                    player.x + player.width > platform.x &&\\\\n                    player.x < platform.x + platform.width) {\\\\n                    \\\\n                    player.y = platform.y - player.height;\\\\n                    player.velocityY = 0;\\\\n                    player.isJumping = false;\\\\n                }\\\\n            }\\\\n        }\\\\n        \\\\n        // Mise à jour du joueur\\\\n        function updatePlayer() {\\\\n            // Mouvement horizontal\\\\n            if (keys['ArrowLeft'] || keys['q']) {\\\\n                player.velocityX = -player.speed;\\\\n            } else if (keys['ArrowRight'] || keys['d']) {\\\\n                player.velocityX = player.speed;\\\\n            } else {\\\\n                player.velocityX *= FRICTION;\\\\n            }\\\\n            \\\\n            // Saut\\\\n            if ((keys['ArrowUp'] || keys['z'] || keys[' ']) && !player.isJumping) {\\\\n                player.velocityY = -player.jumpForce;\\\\n                player.isJumping = true;\\\\n            }\\\\n            \\\\n            // Appliquer la gravité\\\\n            player.velocityY += GRAVITY;\\\\n            \\\\n            // Mettre à jour la position\\\\n            player.x += player.velocityX;\\\\n            player.y += player.velocityY;\\\\n            \\\\n            // Vérifier les collisions avec les plateformes\\\\n            checkPlatformCollision();\\\\n            \\\\n            // Empêcher le joueur de sortir de l'écran\\\\n            if (player.x < 0) {\\\\n                player.x = 0;\\\\n            }\\\\n            if (player.x + player.width > canvas.width) {\\\\n                player.x = canvas.width - player.width;\\\\n            }\\\\n            if (player.y > canvas.height) {\\\\n                player.y = 300;\\\\n                player.x = 50;\\\\n                player.velocityY = 0;\\\\n            }\\\\n        }\\\\n        \\\\n        // Dessiner le joueur\\\\n        function drawPlayer() {\\\\n            ctx.fillStyle = player.color;\\\\n            ctx.fillRect(player.x, player.y, player.width, player.height);\\\\n            \\\\n            // Dessiner un visage simple\\\\n            ctx.fillStyle = '#000';\\\\n            ctx.fillRect(player.x + 20, player.y + 15, 5, 5); // Œil\\\\n            ctx.fillRect(player.x + 10, player.y + 30, 15, 3); // Bouche\\\\n        }\\\\n        \\\\n        // Dessiner les plateformes\\\\n        function drawPlatforms() {\\\\n            for (let i = 0; i < platforms.length; i++) {\\\\n                let platform = platforms[i];\\\\n                ctx.fillStyle = platform.color;\\\\n                ctx.fillRect(platform.x, platform.y, platform.width, platform.height);\\\\n            }\\\\n        }\\\\n        \\\\n        // Boucle du jeu\\\\n        function gameLoop() {\\\\n            // Effacer le canvas\\\\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\\\\n            \\\\n            // Mettre à jour le joueur\\\\n            updatePlayer();\\\\n            \\\\n            // Dessiner les éléments du jeu\\\\n            drawPlatforms();\\\\n            drawPlayer();\\\\n            \\\\n            // Continuer la boucle\\\\n            requestAnimationFrame(gameLoop);\\\\n        }\\\\n        \\\\n        // Simulation de chargement\\\\n        function simulateLoading()</p></div>\",\"contentType\":\"html\"}"}
{"level":40,"time":1756004400889,"pid":1102381,"hostname":"tiloup","jobId":"213","sessionId":"test-frontend-1755645326399","iteration":1,"msg":"Blocked agent thoughts/debugging content from canvas display"}
{"level":30,"time":1756004400890,"pid":1102381,"hostname":"tiloup","jobId":"213","sessionId":"test-frontend-1755645326399","iteration":1,"msg":"Content sent to canvas for job 213 with type html"}
{"level":30,"time":1756004400891,"pid":1102381,"hostname":"tiloup","jobId":"213","sessionId":"test-frontend-1755645326399","channel":"job:213:events","dataType":"tool_result","message":"{\"result\":{\"success\":true},\"toolName\":\"display_canvas\",\"type\":\"tool_result\"}","msg":"[PUBLISH] Publishing message to Redis channel"}
{"level":30,"time":1756004400891,"pid":1102381,"hostname":"tiloup","jobId":"213","sessionId":"test-frontend-1755645326399","msg":"[PUBLISH] Message published to Redis successfully"}
{"level":30,"time":1756004400893,"pid":1102381,"hostname":"tiloup","jobId":"213","sessionId":"test-frontend-1755645326399","iteration":2,"msg":"Agent iteration starting"}
{"level":30,"time":1756004400893,"pid":1102381,"hostname":"tiloup","jobId":"213","sessionId":"test-frontend-1755645326399","channel":"job:213:events","dataType":"agent_thought","message":"{\"content\":\"The agent is thinking... (iteration 2)\",\"id\":\"9f3a920d-88a9-4156-bb87-81e89c626623\",\"timestamp\":1756004400893,\"type\":\"agent_thought\"}","msg":"[PUBLISH] Publishing message to Redis channel"}
{"level":30,"time":1756004400893,"pid":1102381,"hostname":"tiloup","jobId":"213","sessionId":"test-frontend-1755645326399","msg":"[PUBLISH] Message published to Redis successfully"}
{"level":30,"time":1756004400902,"pid":1102381,"hostname":"tiloup","jobId":"213","sessionId":"test-frontend-1755645326399","msg":"Attempting LLM call with provider: qwen"}
{"level":30,"time":1756004400911,"pid":1102381,"hostname":"tiloup","module":"QwenProvider","msg":"Trying Qwen API endpoint: https://portal.qwen.ai/v1/chat/completions"}
{"level":30,"time":1756004400911,"pid":1102381,"hostname":"tiloup","module":"QwenProvider","msg":"[LLM CALL] Sending request to model: qwen3-coder-plus via qwen at https://portal.qwen.ai/v1/chat/completions (attempt 1/5)"}
[CANVAS] Attempting to send to canvas for job 213, type: html, content length: 323
[CANVAS] Channel: job:213:events
[CANVAS] Message: {"content":"<div style='padding: 20px; text-align: center; background: #f3f4f6; border-radius: 8px;'><h2 style='color: #ef4444;'>Content Filtered</h2><p style='color: #6b7280;'>Agent thoughts and debugging content are not displayed in canvas. Use the thought field instead for internal reasoning that appears as chat bubbles.</p></div>","contentType":"html","type":"agent_canvas_output"}
[CANVAS] Redis publish result: Promise { <pending> }
[CANVAS] Content sent to canvas for job 213
{"level":30,"time":1756004429755,"pid":1102381,"hostname":"tiloup","apiKey":"SVBp87e2WX...","provider":"qwen","msg":"LLM API key status reset."}
{"level":30,"time":1756004429772,"pid":1102381,"hostname":"tiloup","sessionId":"test-frontend-1755645326399","msg":"Session history saved to PostgreSQL."}
{"level":30,"time":1756004429772,"pid":1102381,"hostname":"tiloup","jobId":"213","sessionId":"test-frontend-1755645326399","llmResponse":"Je vois que vous souhaitez continuer le projet Duke Nukem 2. Je remarque que nous avons déjà commencé à travailler sur ce projet avec une todo list de 9 tâches, et la première tâche \"Créer le moteur de jeu HTML5 Canvas avec physique et collisions\" est en cours.\n\nCependant, je constate que mon message précédent n'a pas pu être complété correctement. Je vais reprendre le développement du moteur de jeu en continuant à créer le fichier HTML avec le moteur de jeu complet.\n\n```json\n{\n  \"thought\": \"L'utilisateur souhaite continuer le projet Duke Nukem 2. Je vais créer un fichier HTML complet avec le moteur de jeu qui inclut les fonctionnalités de base d'un jeu de plateforme comme Duke Nukem.\",\n  \"command\": {\n    \"name\": \"writeFile\",\n    \"params\": {\n      \"path\": \"dukenukem2-game.html\",\n      \"content\": \"<!DOCTYPE html>\\n<html>\\n<head>\\n    <title>Duke Nukem 2 - Jeu de Plateforme</title>\\n    <style>\\n        body {\\n            margin: 0;\\n            padding: 0;\\n            background-color: #000;\\n            display: flex;\\n            justify-content: center;\\n            align-items: center;\\n            height: 100vh;\\n            font-family: 'Courier New', monospace;\\n            overflow: hidden;\\n        }\\n        \\n        #gameCanvas {\\n            border: 2px solid #fff;\\n            background-color: #000;\\n        }\\n        \\n        #gameContainer {\\n            position: relative;\\n        }\\n        \\n        #ui {\\n            position: absolute;\\n            top: 10px;\\n            left: 10px;\\n            color: white;\\n            font-size: 16px;\\n            z-index: 5;\\n        }\\n    </style>\\n</head>\\n<body>\\n    <div id=\\\"gameContainer\\\">\\n        <canvas id=\\\"gameCanvas\\\" width=\\\"800\\\" height=\\\"600\\\"></canvas>\\n        <div id=\\\"ui\\\">\\n            <div id=\\\"score\\\">Score: 0</div>\\n            <div id=\\\"lives\\\">Vies: 3</div>\\n        </div>\\n    </div>\\n\\n    <script>\\n        // Variables du jeu\\n        const canvas = document.getElementById('gameCanvas');\\n        const ctx = canvas.getContext('2d');\\n        const scoreElement = document.getElementById('score');\\n        const livesElement = document.getElementById('lives');\\n        \\n        // Paramètres du jeu\\n        const GRAVITY = 0.5;\\n        const FRICTION = 0.8;\\n        \\n        // État du jeu\\n        let score = 0;\\n        let lives = 3;\\n        let gameRunning = true;\\n        \\n        // Objets du jeu\\n        let player = {\\n            x: 50,\\n            y: 300,\\n            width: 30,\\n            height: 50,\\n            velocityX: 0,\\n            velocityY: 0,\\n            speed: 5,\\n            jumpForce: 12,\\n            isJumping: false,\\n            color: '#ff0000',\\n            facing: 'right'\\n        };\\n        \\n        let platforms = [\\n            {x: 0, y: 550, width: 800, height: 50, color: '#008000'},\\n            {x: 200, y: 450, width: 100, height: 20, color: '#008000'},\\n            {x: 400, y: 350, width: 100, height: 20, color: '#008000'},\\n            {x: 600, y: 250, width: 100, height: 20, color: '#008000'},\\n            {x: 300, y: 150, width: 200, height: 20, color: '#008000'}\\n        ];\\n        \\n        let enemies = [\\n            {x: 300, y: 520, width: 30, height: 30, color: '#ff00ff', speed: 2, direction: 1},\\n            {x: 500, y: 320, width: 30, height: 30, color: '#ff00ff', speed: 1, direction: -1}\\n        ];\\n        \\n        let bullets = [];\\n        \\n        //Touches\\n        let keys = {};\\n        \\n        // Événements clavier\\n        window.addEventListener('keydown', function(e) {\\n            keys[e.key] = true;\\n            \\n            // Tirer avec espace\\n            if (e.key === ' ' && gameRunning) {\\n                shoot();\\n            }\\n        });\\n        \\n        window.addEventListener('keyup', function(e) {\\n            keys[e.key] = false;\\n        });\\n        \\n        // Fonction de tir\\n        function shoot() {\\n            bullets.push({\\n                x: player.facing === 'right' ? player.x + player.width : player.x,\\n                y: player.y + player.height/2,\\n                width: 10,\\n                height: 5,\\n                speed: player.facing === 'right' ? 10 : -10,\\n                color: '#ffff00'\\n            });\\n        }\\n        \\n        // Fonction de collision\\n        function checkCollision(obj1, obj2) {\\n            return obj1.x < obj2.x + obj2.width &&\\n                   obj1.x + obj1.width > obj2.x &&\\n                   obj1.y < obj2.y + obj2.height &&\\n                   obj1.y + obj1.height > obj2.y;\\n        }\\n        \\n        // Fonction de collision avec les plateformes\\n        function checkPlatformCollision() {\\n            player.isJumping = true;\\n            \\n            for (let i = 0; i < platforms.length; i++) {\\n                let platform = platforms[i];\\n                \\n                // Vérifier si le joueur est au-dessus de la plateforme et tombe\\n                if (player.velocityY > 0 &&\\n                    player.y + player.height <= platform.y &&\\n                    player.y + player.height + player.velocityY > platform.y &&\\n                    player.x + player.width > platform.x &&\\n                    player.x < platform.x + platform.width) {\\n                    \\n                    player.y = platform.y - player.height;\\n                    player.velocityY = 0;\\n                    player.isJumping = false;\\n                }\\n            }\\n        }\\n        \\n        // Mise à jour du joueur\\n        function updatePlayer() {\\n            // Mouvement horizontal\\n            if (keys['ArrowLeft'] || keys['q']) {\\n                player.velocityX = -player.speed;\\n                player.facing = 'left';\\n            } else if (keys['ArrowRight'] || keys['d']) {\\n                player.velocityX = player.speed;\\n                player.facing = 'right';\\n            } else {\\n                player.velocityX *= FRICTION;\\n            }\\n            \\n            // Saut\\n            if ((keys['ArrowUp'] || keys['z'] || keys[' ']) && !player.isJumping) {\\n                player.velocityY = -player.jumpForce;\\n                player.isJumping = true;\\n            }\\n            \\n            // Appliquer la gravité\\n            player.velocityY += GRAVITY;\\n            \\n            // Mettre à jour la position\\n            player.x += player.velocityX;\\n            player.y += player.velocityY;\\n            \\n            // Vérifier les collisions avec les plateformes\\n            checkPlatformCollision();\\n            \\n            // Empêcher le joueur de sortir de l'écran\\n            if (player.x < 0) {\\n                player.x = 0;\\n            }\\n            if (player.x + player.width > canvas.width) {\\n                player.x = canvas.width - player.width;\\n            }\\n            if (player.y > canvas.height) {\\n                // Le joueur est tombé\\n                lives--;\\n                livesElement.textContent = 'Vies: ' + lives;\\n                if (lives <= 0) {\\n                    gameRunning = false;\\n                } else {\\n                    // Réinitialiser la position du joueur\\n                    player.x = 50;\\n                    player.y = 300","provider":"qwen","msg":"Raw LLM response"}
{"level":50,"time":1756004429773,"pid":1102381,"hostname":"tiloup","jobId":"213","sessionId":"test-frontend-1755645326399","iteration":2,"error":{},"llmResponse":"Je vois que vous souhaitez continuer le projet Duke Nukem 2. Je remarque que nous avons déjà commencé à travailler sur ce projet avec une todo list de 9 tâches, et la première tâche \"Créer le moteur de jeu HTML5 Canvas avec physique et collisions\" est en cours.\n\nCependant, je constate que mon message précédent n'a pas pu être complété correctement. Je vais reprendre le développement du moteur de jeu en continuant à créer le fichier HTML avec le moteur de jeu complet.\n\n```json\n{\n  \"thought\": \"L'utilisateur souhaite continuer le projet Duke Nukem 2. Je vais créer un fichier HTML complet avec le moteur de jeu qui inclut les fonctionnalités de base d'un jeu de plateforme comme Duke Nukem.\",\n  \"command\": {\n    \"name\": \"writeFile\",\n    \"params\": {\n      \"path\": \"dukenukem2-game.html\",\n      \"content\": \"<!DOCTYPE html>\\n<html>\\n<head>\\n    <title>Duke Nukem 2 - Jeu de Plateforme</title>\\n    <style>\\n        body {\\n            margin: 0;\\n            padding: 0;\\n            background-color: #000;\\n            display: flex;\\n            justify-content: center;\\n            align-items: center;\\n            height: 100vh;\\n            font-family: 'Courier New', monospace;\\n            overflow: hidden;\\n        }\\n        \\n        #gameCanvas {\\n            border: 2px solid #fff;\\n            background-color: #000;\\n        }\\n        \\n        #gameContainer {\\n            position: relative;\\n        }\\n        \\n        #ui {\\n            position: absolute;\\n            top: 10px;\\n            left: 10px;\\n            color: white;\\n            font-size: 16px;\\n            z-index: 5;\\n        }\\n    </style>\\n</head>\\n<body>\\n    <div id=\\\"gameContainer\\\">\\n        <canvas id=\\\"gameCanvas\\\" width=\\\"800\\\" height=\\\"600\\\"></canvas>\\n        <div id=\\\"ui\\\">\\n            <div id=\\\"score\\\">Score: 0</div>\\n            <div id=\\\"lives\\\">Vies: 3</div>\\n        </div>\\n    </div>\\n\\n    <script>\\n        // Variables du jeu\\n        const canvas = document.getElementById('gameCanvas');\\n        const ctx = canvas.getContext('2d');\\n        const scoreElement = document.getElementById('score');\\n        const livesElement = document.getElementById('lives');\\n        \\n        // Paramètres du jeu\\n        const GRAVITY = 0.5;\\n        const FRICTION = 0.8;\\n        \\n        // État du jeu\\n        let score = 0;\\n        let lives = 3;\\n        let gameRunning = true;\\n        \\n        // Objets du jeu\\n        let player = {\\n            x: 50,\\n            y: 300,\\n            width: 30,\\n            height: 50,\\n            velocityX: 0,\\n            velocityY: 0,\\n            speed: 5,\\n            jumpForce: 12,\\n            isJumping: false,\\n            color: '#ff0000',\\n            facing: 'right'\\n        };\\n        \\n        let platforms = [\\n            {x: 0, y: 550, width: 800, height: 50, color: '#008000'},\\n            {x: 200, y: 450, width: 100, height: 20, color: '#008000'},\\n            {x: 400, y: 350, width: 100, height: 20, color: '#008000'},\\n            {x: 600, y: 250, width: 100, height: 20, color: '#008000'},\\n            {x: 300, y: 150, width: 200, height: 20, color: '#008000'}\\n        ];\\n        \\n        let enemies = [\\n            {x: 300, y: 520, width: 30, height: 30, color: '#ff00ff', speed: 2, direction: 1},\\n            {x: 500, y: 320, width: 30, height: 30, color: '#ff00ff', speed: 1, direction: -1}\\n        ];\\n        \\n        let bullets = [];\\n        \\n        //Touches\\n        let keys = {};\\n        \\n        // Événements clavier\\n        window.addEventListener('keydown', function(e) {\\n            keys[e.key] = true;\\n            \\n            // Tirer avec espace\\n            if (e.key === ' ' && gameRunning) {\\n                shoot();\\n            }\\n        });\\n        \\n        window.addEventListener('keyup', function(e) {\\n            keys[e.key] = false;\\n        });\\n        \\n        // Fonction de tir\\n        function shoot() {\\n            bullets.push({\\n                x: player.facing === 'right' ? player.x + player.width : player.x,\\n                y: player.y + player.height/2,\\n                width: 10,\\n                height: 5,\\n                speed: player.facing === 'right' ? 10 : -10,\\n                color: '#ffff00'\\n            });\\n        }\\n        \\n        // Fonction de collision\\n        function checkCollision(obj1, obj2) {\\n            return obj1.x < obj2.x + obj2.width &&\\n                   obj1.x + obj1.width > obj2.x &&\\n                   obj1.y < obj2.y + obj2.height &&\\n                   obj1.y + obj1.height > obj2.y;\\n        }\\n        \\n        // Fonction de collision avec les plateformes\\n        function checkPlatformCollision() {\\n            player.isJumping = true;\\n            \\n            for (let i = 0; i < platforms.length; i++) {\\n                let platform = platforms[i];\\n                \\n                // Vérifier si le joueur est au-dessus de la plateforme et tombe\\n                if (player.velocityY > 0 &&\\n                    player.y + player.height <= platform.y &&\\n                    player.y + player.height + player.velocityY > platform.y &&\\n                    player.x + player.width > platform.x &&\\n                    player.x < platform.x + platform.width) {\\n                    \\n                    player.y = platform.y - player.height;\\n                    player.velocityY = 0;\\n                    player.isJumping = false;\\n                }\\n            }\\n        }\\n        \\n        // Mise à jour du joueur\\n        function updatePlayer() {\\n            // Mouvement horizontal\\n            if (keys['ArrowLeft'] || keys['q']) {\\n                player.velocityX = -player.speed;\\n                player.facing = 'left';\\n            } else if (keys['ArrowRight'] || keys['d']) {\\n                player.velocityX = player.speed;\\n                player.facing = 'right';\\n            } else {\\n                player.velocityX *= FRICTION;\\n            }\\n            \\n            // Saut\\n            if ((keys['ArrowUp'] || keys['z'] || keys[' ']) && !player.isJumping) {\\n                player.velocityY = -player.jumpForce;\\n                player.isJumping = true;\\n            }\\n            \\n            // Appliquer la gravité\\n            player.velocityY += GRAVITY;\\n            \\n            // Mettre à jour la position\\n            player.x += player.velocityX;\\n            player.y += player.velocityY;\\n            \\n            // Vérifier les collisions avec les plateformes\\n            checkPlatformCollision();\\n            \\n            // Empêcher le joueur de sortir de l'écran\\n            if (player.x < 0) {\\n                player.x = 0;\\n            }\\n            if (player.x + player.width > canvas.width) {\\n                player.x = canvas.width - player.width;\\n            }\\n            if (player.y > canvas.height) {\\n                // Le joueur est tombé\\n                lives--;\\n                livesElement.textContent = 'Vies: ' + lives;\\n                if (lives <= 0) {\\n                    gameRunning = false;\\n                } else {\\n                    // Réinitialiser la position du joueur\\n                    player.x = 50;\\n                    player.y = 300","msg":"Failed to parse LLM response"}
{"level":30,"time":1756004429773,"pid":1102381,"hostname":"tiloup","jobId":"213","sessionId":"test-frontend-1755645326399","iteration":2,"thought":"L'utilisateur veut afficher quelque chose dans le canvas.","msg":"Agent thought"}
{"level":30,"time":1756004429773,"pid":1102381,"hostname":"tiloup","jobId":"213","sessionId":"test-frontend-1755645326399","channel":"job:213:events","dataType":"agent_thought","message":"{\"content\":\"L'utilisateur veut afficher quelque chose dans le canvas.\",\"type\":\"agent_thought\"}","msg":"[PUBLISH] Publishing message to Redis channel"}
{"level":30,"time":1756004429773,"pid":1102381,"hostname":"tiloup","jobId":"213","sessionId":"test-frontend-1755645326399","msg":"[PUBLISH] Message published to Redis successfully"}
{"level":30,"time":1756004429773,"pid":1102381,"hostname":"tiloup","jobId":"213","sessionId":"test-frontend-1755645326399","channel":"job:213:events","dataType":"tool.start","message":"{\"data\":{\"args\":{\"content\":\"<div><h1>Canvas Display</h1><p><div style='padding: 20px; text-align: center;'><h2>Content filtered</h2><p>Internal agent debugging information was filtered out for security.</p></div></p></div>\",\"contentType\":\"html\"},\"name\":\"display_canvas\"},\"type\":\"tool.start\"}","msg":"[PUBLISH] Publishing message to Redis channel"}
{"level":30,"time":1756004429773,"pid":1102381,"hostname":"tiloup","jobId":"213","sessionId":"test-frontend-1755645326399","msg":"[PUBLISH] Message published to Redis successfully"}
{"level":30,"time":1756004429774,"pid":1102381,"hostname":"tiloup","jobId":"213","sessionId":"test-frontend-1755645326399","iteration":2,"msg":"Executing tool: display_canvas with params: {\"content\":\"<div><h1>Canvas Display</h1><p><div style='padding: 20px; text-align: center;'><h2>Content filtered</h2><p>Internal agent debugging information was filtered out for security.</p></div></p></div>\",\"contentType\":\"html\"}"}
{"level":40,"time":1756004429774,"pid":1102381,"hostname":"tiloup","jobId":"213","sessionId":"test-frontend-1755645326399","iteration":2,"msg":"Blocked agent thoughts/debugging content from canvas display"}
{"level":30,"time":1756004429774,"pid":1102381,"hostname":"tiloup","jobId":"213","sessionId":"test-frontend-1755645326399","iteration":2,"msg":"Content sent to canvas for job 213 with type html"}
{"level":30,"time":1756004429775,"pid":1102381,"hostname":"tiloup","jobId":"213","sessionId":"test-frontend-1755645326399","channel":"job:213:events","dataType":"tool_result","message":"{\"result\":{\"success\":true},\"toolName\":\"display_canvas\",\"type\":\"tool_result\"}","msg":"[PUBLISH] Publishing message to Redis channel"}
{"level":30,"time":1756004429775,"pid":1102381,"hostname":"tiloup","jobId":"213","sessionId":"test-frontend-1755645326399","msg":"[PUBLISH] Message published to Redis successfully"}
{"level":30,"time":1756004429776,"pid":1102381,"hostname":"tiloup","jobId":"213","sessionId":"test-frontend-1755645326399","iteration":3,"msg":"Agent iteration starting"}
{"level":30,"time":1756004429776,"pid":1102381,"hostname":"tiloup","jobId":"213","sessionId":"test-frontend-1755645326399","channel":"job:213:events","dataType":"agent_thought","message":"{\"content\":\"The agent is thinking... (iteration 3)\",\"id\":\"fef3bb82-05c2-48d2-996a-8507cd428143\",\"timestamp\":1756004429776,\"type\":\"agent_thought\"}","msg":"[PUBLISH] Publishing message to Redis channel"}
{"level":30,"time":1756004429776,"pid":1102381,"hostname":"tiloup","jobId":"213","sessionId":"test-frontend-1755645326399","msg":"[PUBLISH] Message published to Redis successfully"}
{"level":30,"time":1756004429781,"pid":1102381,"hostname":"tiloup","jobId":"213","sessionId":"test-frontend-1755645326399","msg":"Attempting LLM call with provider: qwen"}
{"level":30,"time":1756004429787,"pid":1102381,"hostname":"tiloup","module":"QwenProvider","msg":"Trying Qwen API endpoint: https://portal.qwen.ai/v1/chat/completions"}
{"level":30,"time":1756004429787,"pid":1102381,"hostname":"tiloup","module":"QwenProvider","msg":"[LLM CALL] Sending request to model: qwen3-coder-plus via qwen at https://portal.qwen.ai/v1/chat/completions (attempt 1/5)"}
[CANVAS] Attempting to send to canvas for job 213, type: html, content length: 323
[CANVAS] Channel: job:213:events
[CANVAS] Message: {"content":"<div style='padding: 20px; text-align: center; background: #f3f4f6; border-radius: 8px;'><h2 style='color: #ef4444;'>Content Filtered</h2><p style='color: #6b7280;'>Agent thoughts and debugging content are not displayed in canvas. Use the thought field instead for internal reasoning that appears as chat bubbles.</p></div>","contentType":"html","type":"agent_canvas_output"}
[CANVAS] Redis publish result: Promise { <pending> }
[CANVAS] Content sent to canvas for job 213
{"level":30,"time":1756004454988,"pid":1102381,"hostname":"tiloup","apiKey":"SVBp87e2WX...","provider":"qwen","msg":"LLM API key status reset."}
{"level":30,"time":1756004455006,"pid":1102381,"hostname":"tiloup","sessionId":"test-frontend-1755645326399","msg":"Session history saved to PostgreSQL."}
{"level":30,"time":1756004455006,"pid":1102381,"hostname":"tiloup","jobId":"213","sessionId":"test-frontend-1755645326399","llmResponse":"```json\n{\n  \"thought\": \"L'utilisateur souhaite continuer le projet Duke Nukem 2. Je vois que nous avons déjà une todo list avec 9 tâches pour le développement du jeu. La première tâche \\\"Créer le moteur de jeu HTML5 Canvas avec physique et collisions\\\" est actuellement en cours. Je vais continuer à travailler sur cette tâche en créant le moteur de jeu complet avec toutes les fonctionnalités de physique et de collisions.\",\n  \"command\": {\n    \"name\": \"writeFile\",\n    \"params\": {\n      \"path\": \"dukenukem2-engine.html\",\n      \"content\": \"<!DOCTYPE html>\\n<html>\\n<head>\\n    <title>Duke Nukem 2 - Moteur de Jeu</title>\\n    <style>\\n        body {\\n            margin: 0;\\n            padding: 0;\\n            background-color: #000;\\n            display: flex;\\n            justify-content: center;\\n            align-items: center;\\n            height: 100vh;\\n            font-family: 'Courier New', monospace;\\n        }\\n        \\n        #gameCanvas {\\n            border: 2px solid #fff;\\n            background-color: #000;\\n        }\\n        \\n        #gameContainer {\\n            position: relative;\\n        }\\n        \\n        #loadingScreen {\\n            position: absolute;\\n            top: 0;\\n            left: 0;\\n            width: 100%;\\n            height: 100%;\\n            background-color: #000;\\n            color: #fff;\\n            display: flex;\\n            flex-direction: column;\\n            justify-content: center;\\n            align-items: center;\\n            z-index: 10;\\n        }\\n        \\n        .loadingText {\\n            font-size: 24px;\\n            margin-bottom: 20px;\\n        }\\n        \\n        .progressBar {\\n            width: 300px;\\n            height: 20px;\\n            border: 2px solid #fff;\\n            background-color: #000;\\n        }\\n        \\n        .progress {\\n            height: 100%;\\n            width: 0%;\\n            background-color: #00f;\\n            transition: width 0.3s;\\n        }\\n    </style>\\n</head>\\n<body>\\n    <div id=\\\"gameContainer\\\">\\n        <div id=\\\"loadingScreen\\\">\\n            <div class=\\\"loadingText\\\">Chargement du moteur de jeu Duke Nukem 2...</div>\\n            <div class=\\\"progressBar\\\">\\n                <div class=\\\"progress\\\" id=\\\"progressBar\\\"></div>\\n            </div>\\n        </div>\\n        <canvas id=\\\"gameCanvas\\\" width=\\\"800\\\" height=\\\"600\\\"></canvas>\\n    </div>\\n\\n    <script>\\n        // Variables du jeu\\n        const canvas = document.getElementById('gameCanvas');\\n        const ctx = canvas.getContext('2d');\\n        const loadingScreen = document.getElementById('loadingScreen');\\n        const progressBar = document.getElementById('progressBar');\\n        \\n        // Paramètres du jeu\\n        const GRAVITY = 0.5;\\n        const FRICTION = 0.8;\\n        \\n        // Objets du jeu\\n        let player = {\\n            x: 50,\\n            y: 300,\\n            width: 30,\\n            height: 50,\\n            velocityX: 0,\\n            velocityY: 0,\\n            speed: 5,\\n            jumpForce: 12,\\n            isJumping: false,\\n            color: '#ff0000'\\n        };\\n        \\n        let platforms = [\\n            {x: 0, y: 550, width: 800, height: 50, color: '#00ff00'},\\n            {x: 200, y: 450, width: 100, height: 20, color: '#00ff00'},\\n            {x: 400, y: 350, width: 100, height: 20, color: '#00ff00'},\\n            {x: 600, y: 250, width: 100, height: 20, color: '#00ff00'}\\n        ];\\n        \\n        // Touches\\n        let keys = {};\\n        \\n        // Événements clavier\\n        window.addEventListener('keydown', function(e) {\\n            keys[e.key] = true;\\n        });\\n        \\n        window.addEventListener('keyup', function(e) {\\n            keys[e.key] = false;\\n        });\\n        \\n        // Fonction de collision\\n        function checkCollision(obj1, obj2) {\\n            return obj1.x < obj2.x + obj2.width &&\\n                   obj1.x + obj1.width > obj2.x &&\\n                   obj1.y < obj2.y + obj2.height &&\\n                   obj1.y + obj1.height > obj2.y;\\n        }\\n        \\n        // Fonction de collision avec les plateformes\\n        function checkPlatformCollision() {\\n            player.isJumping = true;\\n            \\n            for (let i = 0; i < platforms.length; i++) {\\n                let platform = platforms[i];\\n                \\n                // Vérifier si le joueur est au-dessus de la plateforme et tombe\\n                if (player.velocityY > 0 &&\\n                    player.y + player.height <= platform.y &&\\n                    player.y + player.height + player.velocityY > platform.y &&\\n                    player.x + player.width > platform.x &&\\n                    player.x < platform.x + platform.width) {\\n                    \\n                    player.y = platform.y - player.height;\\n                    player.velocityY = 0;\\n                    player.isJumping = false;\\n                }\\n            }\\n        }\\n        \\n        // Mise à jour du joueur\\n        function updatePlayer() {\\n            // Mouvement horizontal\\n            if (keys['ArrowLeft'] || keys['q']) {\\n                player.velocityX = -player.speed;\\n            } else if (keys['ArrowRight'] || keys['d']) {\\n                player.velocityX = player.speed;\\n            } else {\\n                player.velocityX *= FRICTION;\\n            }\\n            \\n            // Saut\\n            if ((keys['ArrowUp'] || keys['z'] || keys[' ']) && !player.isJumping) {\\n                player.velocityY = -player.jumpForce;\\n                player.isJumping = true;\\n            }\\n            \\n            // Appliquer la gravité\\n            player.velocityY += GRAVITY;\\n            \\n            // Mettre à jour la position\\n            player.x += player.velocityX;\\n            player.y += player.velocityY;\\n            \\n            // Vérifier les collisions avec les plateformes\\n            checkPlatformCollision();\\n            \\n            // Empêcher le joueur de sortir de l'écran\\n            if (player.x < 0) {\\n                player.x = 0;\\n            }\\n            if (player.x + player.width > canvas.width) {\\n                player.x = canvas.width - player.width;\\n            }\\n            if (player.y > canvas.height) {\\n                player.y = 300;\\n                player.x = 50;\\n                player.velocityY = 0;\\n            }\\n        }\\n        \\n        // Dessiner le joueur\\n        function drawPlayer() {\\n            ctx.fillStyle = player.color;\\n            ctx.fillRect(player.x, player.y, player.width, player.height);\\n            \\n            // Dessiner un visage simple\\n            ctx.fillStyle = '#000';\\n            ctx.fillRect(player.x + 20, player.y + 15, 5, 5); // Œil\\n            ctx.fillRect(player.x + 10, player.y + 30, 15, 3); // Bouche\\n        }\\n        \\n        // Dessiner les plateformes\\n        function drawPlatforms() {\\n            for (let i = 0; i < platforms.length; i++) {\\n                let platform = platforms[i];\\n                ctx.fillStyle = platform.color;\\n                ctx.fillRect(platform.x, platform.y, platform.width, platform.height);\\n            }\\n        }\\n        \\n        // Boucle du jeu\\n        function gameLoop() {\\n            // Effacer le canvas\\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\\n            \\n            // Mettre à jour le joueur\\n            updatePlayer();\\n            \\n            // Dessiner les éléments du jeu\\n            drawPlatforms();\\n            drawPlayer","provider":"qwen","msg":"Raw LLM response"}
{"level":50,"time":1756004455006,"pid":1102381,"hostname":"tiloup","jobId":"213","sessionId":"test-frontend-1755645326399","iteration":3,"error":{},"llmResponse":"```json\n{\n  \"thought\": \"L'utilisateur souhaite continuer le projet Duke Nukem 2. Je vois que nous avons déjà une todo list avec 9 tâches pour le développement du jeu. La première tâche \\\"Créer le moteur de jeu HTML5 Canvas avec physique et collisions\\\" est actuellement en cours. Je vais continuer à travailler sur cette tâche en créant le moteur de jeu complet avec toutes les fonctionnalités de physique et de collisions.\",\n  \"command\": {\n    \"name\": \"writeFile\",\n    \"params\": {\n      \"path\": \"dukenukem2-engine.html\",\n      \"content\": \"<!DOCTYPE html>\\n<html>\\n<head>\\n    <title>Duke Nukem 2 - Moteur de Jeu</title>\\n    <style>\\n        body {\\n            margin: 0;\\n            padding: 0;\\n            background-color: #000;\\n            display: flex;\\n            justify-content: center;\\n            align-items: center;\\n            height: 100vh;\\n            font-family: 'Courier New', monospace;\\n        }\\n        \\n        #gameCanvas {\\n            border: 2px solid #fff;\\n            background-color: #000;\\n        }\\n        \\n        #gameContainer {\\n            position: relative;\\n        }\\n        \\n        #loadingScreen {\\n            position: absolute;\\n            top: 0;\\n            left: 0;\\n            width: 100%;\\n            height: 100%;\\n            background-color: #000;\\n            color: #fff;\\n            display: flex;\\n            flex-direction: column;\\n            justify-content: center;\\n            align-items: center;\\n            z-index: 10;\\n        }\\n        \\n        .loadingText {\\n            font-size: 24px;\\n            margin-bottom: 20px;\\n        }\\n        \\n        .progressBar {\\n            width: 300px;\\n            height: 20px;\\n            border: 2px solid #fff;\\n            background-color: #000;\\n        }\\n        \\n        .progress {\\n            height: 100%;\\n            width: 0%;\\n            background-color: #00f;\\n            transition: width 0.3s;\\n        }\\n    </style>\\n</head>\\n<body>\\n    <div id=\\\"gameContainer\\\">\\n        <div id=\\\"loadingScreen\\\">\\n            <div class=\\\"loadingText\\\">Chargement du moteur de jeu Duke Nukem 2...</div>\\n            <div class=\\\"progressBar\\\">\\n                <div class=\\\"progress\\\" id=\\\"progressBar\\\"></div>\\n            </div>\\n        </div>\\n        <canvas id=\\\"gameCanvas\\\" width=\\\"800\\\" height=\\\"600\\\"></canvas>\\n    </div>\\n\\n    <script>\\n        // Variables du jeu\\n        const canvas = document.getElementById('gameCanvas');\\n        const ctx = canvas.getContext('2d');\\n        const loadingScreen = document.getElementById('loadingScreen');\\n        const progressBar = document.getElementById('progressBar');\\n        \\n        // Paramètres du jeu\\n        const GRAVITY = 0.5;\\n        const FRICTION = 0.8;\\n        \\n        // Objets du jeu\\n        let player = {\\n            x: 50,\\n            y: 300,\\n            width: 30,\\n            height: 50,\\n            velocityX: 0,\\n            velocityY: 0,\\n            speed: 5,\\n            jumpForce: 12,\\n            isJumping: false,\\n            color: '#ff0000'\\n        };\\n        \\n        let platforms = [\\n            {x: 0, y: 550, width: 800, height: 50, color: '#00ff00'},\\n            {x: 200, y: 450, width: 100, height: 20, color: '#00ff00'},\\n            {x: 400, y: 350, width: 100, height: 20, color: '#00ff00'},\\n            {x: 600, y: 250, width: 100, height: 20, color: '#00ff00'}\\n        ];\\n        \\n        // Touches\\n        let keys = {};\\n        \\n        // Événements clavier\\n        window.addEventListener('keydown', function(e) {\\n            keys[e.key] = true;\\n        });\\n        \\n        window.addEventListener('keyup', function(e) {\\n            keys[e.key] = false;\\n        });\\n        \\n        // Fonction de collision\\n        function checkCollision(obj1, obj2) {\\n            return obj1.x < obj2.x + obj2.width &&\\n                   obj1.x + obj1.width > obj2.x &&\\n                   obj1.y < obj2.y + obj2.height &&\\n                   obj1.y + obj1.height > obj2.y;\\n        }\\n        \\n        // Fonction de collision avec les plateformes\\n        function checkPlatformCollision() {\\n            player.isJumping = true;\\n            \\n            for (let i = 0; i < platforms.length; i++) {\\n                let platform = platforms[i];\\n                \\n                // Vérifier si le joueur est au-dessus de la plateforme et tombe\\n                if (player.velocityY > 0 &&\\n                    player.y + player.height <= platform.y &&\\n                    player.y + player.height + player.velocityY > platform.y &&\\n                    player.x + player.width > platform.x &&\\n                    player.x < platform.x + platform.width) {\\n                    \\n                    player.y = platform.y - player.height;\\n                    player.velocityY = 0;\\n                    player.isJumping = false;\\n                }\\n            }\\n        }\\n        \\n        // Mise à jour du joueur\\n        function updatePlayer() {\\n            // Mouvement horizontal\\n            if (keys['ArrowLeft'] || keys['q']) {\\n                player.velocityX = -player.speed;\\n            } else if (keys['ArrowRight'] || keys['d']) {\\n                player.velocityX = player.speed;\\n            } else {\\n                player.velocityX *= FRICTION;\\n            }\\n            \\n            // Saut\\n            if ((keys['ArrowUp'] || keys['z'] || keys[' ']) && !player.isJumping) {\\n                player.velocityY = -player.jumpForce;\\n                player.isJumping = true;\\n            }\\n            \\n            // Appliquer la gravité\\n            player.velocityY += GRAVITY;\\n            \\n            // Mettre à jour la position\\n            player.x += player.velocityX;\\n            player.y += player.velocityY;\\n            \\n            // Vérifier les collisions avec les plateformes\\n            checkPlatformCollision();\\n            \\n            // Empêcher le joueur de sortir de l'écran\\n            if (player.x < 0) {\\n                player.x = 0;\\n            }\\n            if (player.x + player.width > canvas.width) {\\n                player.x = canvas.width - player.width;\\n            }\\n            if (player.y > canvas.height) {\\n                player.y = 300;\\n                player.x = 50;\\n                player.velocityY = 0;\\n            }\\n        }\\n        \\n        // Dessiner le joueur\\n        function drawPlayer() {\\n            ctx.fillStyle = player.color;\\n            ctx.fillRect(player.x, player.y, player.width, player.height);\\n            \\n            // Dessiner un visage simple\\n            ctx.fillStyle = '#000';\\n            ctx.fillRect(player.x + 20, player.y + 15, 5, 5); // Œil\\n            ctx.fillRect(player.x + 10, player.y + 30, 15, 3); // Bouche\\n        }\\n        \\n        // Dessiner les plateformes\\n        function drawPlatforms() {\\n            for (let i = 0; i < platforms.length; i++) {\\n                let platform = platforms[i];\\n                ctx.fillStyle = platform.color;\\n                ctx.fillRect(platform.x, platform.y, platform.width, platform.height);\\n            }\\n        }\\n        \\n        // Boucle du jeu\\n        function gameLoop() {\\n            // Effacer le canvas\\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\\n            \\n            // Mettre à jour le joueur\\n            updatePlayer();\\n            \\n            // Dessiner les éléments du jeu\\n            drawPlatforms();\\n            drawPlayer","msg":"Failed to parse LLM response"}
{"level":30,"time":1756004455007,"pid":1102381,"hostname":"tiloup","jobId":"213","sessionId":"test-frontend-1755645326399","iteration":3,"thought":"L'utilisateur veut afficher quelque chose dans le canvas.","msg":"Agent thought"}
{"level":30,"time":1756004455007,"pid":1102381,"hostname":"tiloup","jobId":"213","sessionId":"test-frontend-1755645326399","channel":"job:213:events","dataType":"agent_thought","message":"{\"content\":\"L'utilisateur veut afficher quelque chose dans le canvas.\",\"type\":\"agent_thought\"}","msg":"[PUBLISH] Publishing message to Redis channel"}
{"level":30,"time":1756004455007,"pid":1102381,"hostname":"tiloup","jobId":"213","sessionId":"test-frontend-1755645326399","msg":"[PUBLISH] Message published to Redis successfully"}
{"level":30,"time":1756004455007,"pid":1102381,"hostname":"tiloup","jobId":"213","sessionId":"test-frontend-1755645326399","channel":"job:213:events","dataType":"tool.start","message":"{\"data\":{\"args\":{\"content\":\"<div><h1>Canvas Display</h1><p><div style='padding: 20px; text-align: center;'><h2>Content filtered</h2><p>Internal agent debugging information was filtered out for security.</p></div></p></div>\",\"contentType\":\"html\"},\"name\":\"display_canvas\"},\"type\":\"tool.start\"}","msg":"[PUBLISH] Publishing message to Redis channel"}
{"level":30,"time":1756004455007,"pid":1102381,"hostname":"tiloup","jobId":"213","sessionId":"test-frontend-1755645326399","msg":"[PUBLISH] Message published to Redis successfully"}
{"level":30,"time":1756004455007,"pid":1102381,"hostname":"tiloup","jobId":"213","sessionId":"test-frontend-1755645326399","iteration":3,"msg":"Executing tool: display_canvas with params: {\"content\":\"<div><h1>Canvas Display</h1><p><div style='padding: 20px; text-align: center;'><h2>Content filtered</h2><p>Internal agent debugging information was filtered out for security.</p></div></p></div>\",\"contentType\":\"html\"}"}
{"level":40,"time":1756004455007,"pid":1102381,"hostname":"tiloup","jobId":"213","sessionId":"test-frontend-1755645326399","iteration":3,"msg":"Blocked agent thoughts/debugging content from canvas display"}
{"level":30,"time":1756004455008,"pid":1102381,"hostname":"tiloup","jobId":"213","sessionId":"test-frontend-1755645326399","iteration":3,"msg":"Content sent to canvas for job 213 with type html"}
{"level":30,"time":1756004455008,"pid":1102381,"hostname":"tiloup","jobId":"213","sessionId":"test-frontend-1755645326399","channel":"job:213:events","dataType":"tool_result","message":"{\"result\":{\"success\":true},\"toolName\":\"display_canvas\",\"type\":\"tool_result\"}","msg":"[PUBLISH] Publishing message to Redis channel"}
{"level":30,"time":1756004455008,"pid":1102381,"hostname":"tiloup","jobId":"213","sessionId":"test-frontend-1755645326399","msg":"[PUBLISH] Message published to Redis successfully"}
{"level":30,"time":1756004455009,"pid":1102381,"hostname":"tiloup","jobId":"213","sessionId":"test-frontend-1755645326399","iteration":4,"msg":"Agent iteration starting"}
{"level":30,"time":1756004455009,"pid":1102381,"hostname":"tiloup","jobId":"213","sessionId":"test-frontend-1755645326399","channel":"job:213:events","dataType":"agent_thought","message":"{\"content\":\"The agent is thinking... (iteration 4)\",\"id\":\"11d2ea5f-567c-432d-9dac-30c47b18f475\",\"timestamp\":1756004455009,\"type\":\"agent_thought\"}","msg":"[PUBLISH] Publishing message to Redis channel"}
{"level":30,"time":1756004455009,"pid":1102381,"hostname":"tiloup","jobId":"213","sessionId":"test-frontend-1755645326399","msg":"[PUBLISH] Message published to Redis successfully"}
{"level":30,"time":1756004455013,"pid":1102381,"hostname":"tiloup","jobId":"213","sessionId":"test-frontend-1755645326399","msg":"Attempting LLM call with provider: qwen"}
{"level":30,"time":1756004455018,"pid":1102381,"hostname":"tiloup","module":"QwenProvider","msg":"Trying Qwen API endpoint: https://portal.qwen.ai/v1/chat/completions"}
{"level":30,"time":1756004455018,"pid":1102381,"hostname":"tiloup","module":"QwenProvider","msg":"[LLM CALL] Sending request to model: qwen3-coder-plus via qwen at https://portal.qwen.ai/v1/chat/completions (attempt 1/5)"}
{"level":30,"time":1756004481039,"pid":1102381,"hostname":"tiloup","apiKey":"SVBp87e2WX...","provider":"qwen","msg":"LLM API key status reset."}
{"level":30,"time":1756004481057,"pid":1102381,"hostname":"tiloup","sessionId":"test-frontend-1755645326399","msg":"Session history saved to PostgreSQL."}
{"level":30,"time":1756004481057,"pid":1102381,"hostname":"tiloup","jobId":"213","sessionId":"test-frontend-1755645326399","llmResponse":"```json\n{\n  \"thought\": \"L'utilisateur souhaite continuer le projet Duke Nukem 2. Je vois que nous avons déjà une todo list avec 9 tâches pour le développement du jeu. La première tâche \\\"Créer le moteur de jeu HTML5 Canvas avec physique et collisions\\\" est actuellement en cours. Je vais continuer à travailler sur cette tâche en créant le moteur de jeu.\",\n  \"command\": {\n    \"name\": \"writeFile\",\n    \"params\": {\n      \"path\": \"dukenukem2-engine.html\",\n      \"content\": \"<!DOCTYPE html>\\n<html>\\n<head>\\n    <title>Duke Nukem 2 - Moteur de Jeu</title>\\n    <style>\\n        body {\\n            margin: 0;\\n            padding: 0;\\n            background-color: #000;\\n            display: flex;\\n            justify-content: center;\\n            align-items: center;\\n            height: 100vh;\\n            font-family: 'Courier New', monospace;\\n        }\\n        \\n        #gameCanvas {\\n            border: 2px solid #fff;\\n            background-color: #000;\\n        }\\n        \\n        #gameContainer {\\n            position: relative;\\n        }\\n        \\n        #loadingScreen {\\n            position: absolute;\\n            top: 0;\\n            left: 0;\\n            width: 100%;\\n            height: 100%;\\n            background-color: #000;\\n            color: #fff;\\n            display: flex;\\n            flex-direction: column;\\n            justify-content: center;\\n            align-items: center;\\n            z-index: 10;\\n        }\\n        \\n        .loadingText {\\n            font-size: 24px;\\n            margin-bottom: 20px;\\n        }\\n        \\n        .progressBar {\\n            width: 300px;\\n            height: 20px;\\n            border: 2px solid #fff;\\n            background-color: #000;\\n        }\\n        \\n        .progress {\\n            height: 100%;\\n            width: 0%;\\n            background-color: #00f;\\n            transition: width 0.3s;\\n        }\\n    </style>\\n</head>\\n<body>\\n    <div id=\\\"gameContainer\\\">\\n        <div id=\\\"loadingScreen\\\">\\n            <div class=\\\"loadingText\\\">Chargement du moteur de jeu Duke Nukem 2...</div>\\n            <div class=\\\"progressBar\\\">\\n                <div class=\\\"progress\\\" id=\\\"progressBar\\\"></div>\\n            </div>\\n        </div>\\n        <canvas id=\\\"gameCanvas\\\" width=\\\"800\\\" height=\\\"600\\\"></canvas>\\n    </div>\\n\\n    <script>\\n        // Variables du jeu\\n        const canvas = document.getElementById('gameCanvas');\\n        const ctx = canvas.getContext('2d');\\n        const loadingScreen = document.getElementById('loadingScreen');\\n        const progressBar = document.getElementById('progressBar');\\n        \\n        // Paramètres du jeu\\n        const GRAVITY = 0.5;\\n        const FRICTION = 0.8;\\n        \\n        // Objets du jeu\\n        let player = {\\n            x: 50,\\n            y: 300,\\n            width: 30,\\n            height: 50,\\n            velocityX: 0,\\n            velocityY: 0,\\n            speed: 5,\\n            jumpForce: 12,\\n            isJumping: false,\\n            color: '#ff0000'\\n        };\\n        \\n        let platforms = [\\n            {x: 0, y: 550, width: 800, height: 50, color: '#00ff00'},\\n            {x: 200, y: 450, width: 100, height: 20, color: '#00ff00'},\\n            {x: 400, y: 350, width: 100, height: 20, color: '#00ff00'},\\n            {x: 600, y: 250, width: 100, height: 20, color: '#00ff00'}\\n        ];\\n        \\n        //Touches\\n        let keys = {};\\n        \\n        // Événements clavier\\n        window.addEventListener('keydown', function(e) {\\n            keys[e.key] = true;\\n        });\\n        \\n        window.addEventListener('keyup', function(e) {\\n            keys[e.key] = false;\\n        });\\n        \\n        // Fonction de collision\\n        function checkCollision(obj1, obj2) {\\n            return obj1.x < obj2.x + obj2.width &&\\n                   obj1.x + obj1.width > obj2.x &&\\n                   obj1.y < obj2.y + obj2.height &&\\n                   obj1.y + obj1.height > obj2.y;\\n        }\\n        \\n        // Fonction de collision avec les plateformes\\n        function checkPlatformCollision() {\\n            player.isJumping = true;\\n            \\n            for (let i = 0; i < platforms.length; i++) {\\n                let platform = platforms[i];\\n                \\n                // Vérifier si le joueur est au-dessus de la plateforme et tombe\\n                if (player.velocityY > 0 &&\\n                    player.y + player.height <= platform.y &&\\n                    player.y + player.height + player.velocityY > platform.y &&\\n                    player.x + player.width > platform.x &&\\n                    player.x < platform.x + platform.width) {\\n                    \\n                    player.y = platform.y - player.height;\\n                    player.velocityY = 0;\\n                    player.isJumping = false;\\n                }\\n            }\\n        }\\n        \\n        // Mise à jour du joueur\\n        function updatePlayer() {\\n            // Mouvement horizontal\\n            if (keys['ArrowLeft'] || keys['q']) {\\n                player.velocityX = -player.speed;\\n            } else if (keys['ArrowRight'] || keys['d']) {\\n                player.velocityX = player.speed;\\n            } else {\\n                player.velocityX *= FRICTION;\\n            }\\n            \\n            // Saut\\n            if ((keys['ArrowUp'] || keys['z'] || keys[' ']) && !player.isJumping) {\\n                player.velocityY = -player.jumpForce;\\n                player.isJumping = true;\\n            }\\n            \\n            // Appliquer la gravité\\n            player.velocityY += GRAVITY;\\n            \\n            // Mettre à jour la position\\n            player.x += player.velocityX;\\n            player.y += player.velocityY;\\n            \\n            // Vérifier les collisions avec les plateformes\\n            checkPlatformCollision();\\n            \\n            // Empêcher le joueur de sortir de l'écran\\n            if (player.x < 0) {\\n                player.x = 0;\\n            }\\n            if (player.x + player.width > canvas.width) {\\n                player.x = canvas.width - player.width;\\n            }\\n            if (player.y > canvas.height) {\\n                player.y = 300;\\n                player.x = 50;\\n                player.velocityY = 0;\\n            }\\n        }\\n        \\n        // Dessiner le joueur\\n        function drawPlayer() {\\n            ctx.fillStyle = player.color;\\n            ctx.fillRect(player.x, player.y, player.width, player.height);\\n            \\n            // Dessiner un visage simple\\n            ctx.fillStyle = '#000';\\n            ctx.fillRect(player.x + 20, player.y + 15, 5, 5); // Œil\\n            ctx.fillRect(player.x + 10, player.y + 30, 15, 3); // Bouche\\n        }\\n        \\n        // Dessiner les plateformes\\n        function drawPlatforms() {\\n            for (let i = 0; i < platforms.length; i++) {\\n                let platform = platforms[i];\\n                ctx.fillStyle = platform.color;\\n                ctx.fillRect(platform.x, platform.y, platform.width, platform.height);\\n            }\\n        }\\n        \\n        // Boucle du jeu\\n        function gameLoop() {\\n            // Effacer le canvas\\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\\n            \\n            // Mettre à jour le joueur\\n            updatePlayer();\\n            \\n            // Dessiner les éléments du jeu\\n            drawPlatforms();\\n            drawPlayer();\\n            \\n            // Continuer la boucle","provider":"qwen","msg":"Raw LLM response"}
{"level":50,"time":1756004481057,"pid":1102381,"hostname":"tiloup","jobId":"213","sessionId":"test-frontend-1755645326399","iteration":4,"error":{},"llmResponse":"```json\n{\n  \"thought\": \"L'utilisateur souhaite continuer le projet Duke Nukem 2. Je vois que nous avons déjà une todo list avec 9 tâches pour le développement du jeu. La première tâche \\\"Créer le moteur de jeu HTML5 Canvas avec physique et collisions\\\" est actuellement en cours. Je vais continuer à travailler sur cette tâche en créant le moteur de jeu.\",\n  \"command\": {\n    \"name\": \"writeFile\",\n    \"params\": {\n      \"path\": \"dukenukem2-engine.html\",\n      \"content\": \"<!DOCTYPE html>\\n<html>\\n<head>\\n    <title>Duke Nukem 2 - Moteur de Jeu</title>\\n    <style>\\n        body {\\n            margin: 0;\\n            padding: 0;\\n            background-color: #000;\\n            display: flex;\\n            justify-content: center;\\n            align-items: center;\\n            height: 100vh;\\n            font-family: 'Courier New', monospace;\\n        }\\n        \\n        #gameCanvas {\\n            border: 2px solid #fff;\\n            background-color: #000;\\n        }\\n        \\n        #gameContainer {\\n            position: relative;\\n        }\\n        \\n        #loadingScreen {\\n            position: absolute;\\n            top: 0;\\n            left: 0;\\n            width: 100%;\\n            height: 100%;\\n            background-color: #000;\\n            color: #fff;\\n            display: flex;\\n            flex-direction: column;\\n            justify-content: center;\\n            align-items: center;\\n            z-index: 10;\\n        }\\n        \\n        .loadingText {\\n            font-size: 24px;\\n            margin-bottom: 20px;\\n        }\\n        \\n        .progressBar {\\n            width: 300px;\\n            height: 20px;\\n            border: 2px solid #fff;\\n            background-color: #000;\\n        }\\n        \\n        .progress {\\n            height: 100%;\\n            width: 0%;\\n            background-color: #00f;\\n            transition: width 0.3s;\\n        }\\n    </style>\\n</head>\\n<body>\\n    <div id=\\\"gameContainer\\\">\\n        <div id=\\\"loadingScreen\\\">\\n            <div class=\\\"loadingText\\\">Chargement du moteur de jeu Duke Nukem 2...</div>\\n            <div class=\\\"progressBar\\\">\\n                <div class=\\\"progress\\\" id=\\\"progressBar\\\"></div>\\n            </div>\\n        </div>\\n        <canvas id=\\\"gameCanvas\\\" width=\\\"800\\\" height=\\\"600\\\"></canvas>\\n    </div>\\n\\n    <script>\\n        // Variables du jeu\\n        const canvas = document.getElementById('gameCanvas');\\n        const ctx = canvas.getContext('2d');\\n        const loadingScreen = document.getElementById('loadingScreen');\\n        const progressBar = document.getElementById('progressBar');\\n        \\n        // Paramètres du jeu\\n        const GRAVITY = 0.5;\\n        const FRICTION = 0.8;\\n        \\n        // Objets du jeu\\n        let player = {\\n            x: 50,\\n            y: 300,\\n            width: 30,\\n            height: 50,\\n            velocityX: 0,\\n            velocityY: 0,\\n            speed: 5,\\n            jumpForce: 12,\\n            isJumping: false,\\n            color: '#ff0000'\\n        };\\n        \\n        let platforms = [\\n            {x: 0, y: 550, width: 800, height: 50, color: '#00ff00'},\\n            {x: 200, y: 450, width: 100, height: 20, color: '#00ff00'},\\n            {x: 400, y: 350, width: 100, height: 20, color: '#00ff00'},\\n            {x: 600, y: 250, width: 100, height: 20, color: '#00ff00'}\\n        ];\\n        \\n        //Touches\\n        let keys = {};\\n        \\n        // Événements clavier\\n        window.addEventListener('keydown', function(e) {\\n            keys[e.key] = true;\\n        });\\n        \\n        window.addEventListener('keyup', function(e) {\\n            keys[e.key] = false;\\n        });\\n        \\n        // Fonction de collision\\n        function checkCollision(obj1, obj2) {\\n            return obj1.x < obj2.x + obj2.width &&\\n                   obj1.x + obj1.width > obj2.x &&\\n                   obj1.y < obj2.y + obj2.height &&\\n                   obj1.y + obj1.height > obj2.y;\\n        }\\n        \\n        // Fonction de collision avec les plateformes\\n        function checkPlatformCollision() {\\n            player.isJumping = true;\\n            \\n            for (let i = 0; i < platforms.length; i++) {\\n                let platform = platforms[i];\\n                \\n                // Vérifier si le joueur est au-dessus de la plateforme et tombe\\n                if (player.velocityY > 0 &&\\n                    player.y + player.height <= platform.y &&\\n                    player.y + player.height + player.velocityY > platform.y &&\\n                    player.x + player.width > platform.x &&\\n                    player.x < platform.x + platform.width) {\\n                    \\n                    player.y = platform.y - player.height;\\n                    player.velocityY = 0;\\n                    player.isJumping = false;\\n                }\\n            }\\n        }\\n        \\n        // Mise à jour du joueur\\n        function updatePlayer() {\\n            // Mouvement horizontal\\n            if (keys['ArrowLeft'] || keys['q']) {\\n                player.velocityX = -player.speed;\\n            } else if (keys['ArrowRight'] || keys['d']) {\\n                player.velocityX = player.speed;\\n            } else {\\n                player.velocityX *= FRICTION;\\n            }\\n            \\n            // Saut\\n            if ((keys['ArrowUp'] || keys['z'] || keys[' ']) && !player.isJumping) {\\n                player.velocityY = -player.jumpForce;\\n                player.isJumping = true;\\n            }\\n            \\n            // Appliquer la gravité\\n            player.velocityY += GRAVITY;\\n            \\n            // Mettre à jour la position\\n            player.x += player.velocityX;\\n            player.y += player.velocityY;\\n            \\n            // Vérifier les collisions avec les plateformes\\n            checkPlatformCollision();\\n            \\n            // Empêcher le joueur de sortir de l'écran\\n            if (player.x < 0) {\\n                player.x = 0;\\n            }\\n            if (player.x + player.width > canvas.width) {\\n                player.x = canvas.width - player.width;\\n            }\\n            if (player.y > canvas.height) {\\n                player.y = 300;\\n                player.x = 50;\\n                player.velocityY = 0;\\n            }\\n        }\\n        \\n        // Dessiner le joueur\\n        function drawPlayer() {\\n            ctx.fillStyle = player.color;\\n            ctx.fillRect(player.x, player.y, player.width, player.height);\\n            \\n            // Dessiner un visage simple\\n            ctx.fillStyle = '#000';\\n            ctx.fillRect(player.x + 20, player.y + 15, 5, 5); // Œil\\n            ctx.fillRect(player.x + 10, player.y + 30, 15, 3); // Bouche\\n        }\\n        \\n        // Dessiner les plateformes\\n        function drawPlatforms() {\\n            for (let i = 0; i < platforms.length; i++) {\\n                let platform = platforms[i];\\n                ctx.fillStyle = platform.color;\\n                ctx.fillRect(platform.x, platform.y, platform.width, platform.height);\\n            }\\n        }\\n        \\n        // Boucle du jeu\\n        function gameLoop() {\\n            // Effacer le canvas\\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\\n            \\n            // Mettre à jour le joueur\\n            updatePlayer();\\n            \\n            // Dessiner les éléments du jeu\\n            drawPlatforms();\\n            drawPlayer();\\n            \\n            // Continuer la boucle","msg":"Failed to parse LLM response"}
{"level":40,"time":1756004481058,"pid":1102381,"hostname":"tiloup","jobId":"213","sessionId":"test-frontend-1755645326399","msg":"Loop detected: Same command 'display_canvas' repeated 3 times"}
{"level":50,"time":1756004481058,"pid":1102381,"hostname":"tiloup","jobId":"213","sessionId":"test-frontend-1755645326399","msg":"Loop detected in agent behavior. Stopping execution."}
{"level":30,"time":1756004481058,"pid":1102381,"hostname":"tiloup","jobId":"213","sessionId":"test-frontend-1755645326399","msg":"Successfully incremented successfulRuns counter"}
{"level":30,"time":1756004481059,"pid":1102381,"hostname":"tiloup","jobId":"213","sessionId":"test-frontend-1755645326399","msg":"Agent execution completed successfully"}
{"level":30,"time":1756004481073,"pid":1102381,"hostname":"tiloup","sessionId":"test-frontend-1755645326399","msg":"Session history saved to PostgreSQL."}
{"level":30,"time":1756004481073,"pid":1102381,"hostname":"tiloup","jobId":"213","sessionId":"test-frontend-1755645326399","msg":"Traitement du job 213 terminé"}
{"level":30,"time":1756004481178,"pid":1102381,"hostname":"tiloup","msg":"Job 213 terminé avec succès."}
