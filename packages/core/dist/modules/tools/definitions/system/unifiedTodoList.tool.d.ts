import { z } from 'zod';
import { T as Tool } from '../../../../types-X5iVOMgV.js';
import 'fastmcp';
import 'ioredis';
import 'bullmq';
import 'pg';
import 'pino';

declare const unifiedTodoItemSchema: z.ZodObject<{
    actualTime: z.ZodOptional<z.ZodNumber>;
    assignedTo: z.ZodOptional<z.ZodString>;
    category: z.ZodOptional<z.ZodString>;
    content: z.ZodString;
    createdAt: z.ZodNumber;
    dependencies: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
    estimatedTime: z.ZodOptional<z.ZodNumber>;
    id: z.ZodString;
    parentId: z.ZodOptional<z.ZodString>;
    priority: z.ZodDefault<z.ZodEnum<["low", "medium", "high", "critical"]>>;
    progress: z.ZodDefault<z.ZodNumber>;
    projectId: z.ZodOptional<z.ZodString>;
    status: z.ZodEnum<["pending", "in_progress", "completed", "blocked", "cancelled"]>;
    tags: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
    updatedAt: z.ZodNumber;
}, "strip", z.ZodTypeAny, {
    status: "in_progress" | "pending" | "completed" | "blocked" | "cancelled";
    id: string;
    content: string;
    createdAt: number;
    dependencies: string[];
    priority: "high" | "low" | "medium" | "critical";
    tags: string[];
    updatedAt: number;
    progress: number;
    actualTime?: number | undefined;
    assignedTo?: string | undefined;
    category?: string | undefined;
    estimatedTime?: number | undefined;
    parentId?: string | undefined;
    projectId?: string | undefined;
}, {
    status: "in_progress" | "pending" | "completed" | "blocked" | "cancelled";
    id: string;
    content: string;
    createdAt: number;
    updatedAt: number;
    actualTime?: number | undefined;
    assignedTo?: string | undefined;
    category?: string | undefined;
    dependencies?: string[] | undefined;
    estimatedTime?: number | undefined;
    parentId?: string | undefined;
    priority?: "high" | "low" | "medium" | "critical" | undefined;
    projectId?: string | undefined;
    tags?: string[] | undefined;
    progress?: number | undefined;
}>;
declare const unifiedProjectSchema: z.ZodObject<{
    completedTaskCount: z.ZodDefault<z.ZodNumber>;
    createdAt: z.ZodNumber;
    description: z.ZodOptional<z.ZodString>;
    endDate: z.ZodOptional<z.ZodNumber>;
    id: z.ZodString;
    name: z.ZodString;
    progress: z.ZodDefault<z.ZodNumber>;
    startDate: z.ZodOptional<z.ZodNumber>;
    status: z.ZodDefault<z.ZodEnum<["planning", "active", "on_hold", "completed", "cancelled"]>>;
    taskCount: z.ZodDefault<z.ZodNumber>;
    updatedAt: z.ZodNumber;
}, "strip", z.ZodTypeAny, {
    status: "completed" | "cancelled" | "planning" | "on_hold" | "active";
    name: string;
    id: string;
    createdAt: number;
    updatedAt: number;
    progress: number;
    completedTaskCount: number;
    taskCount: number;
    description?: string | undefined;
    endDate?: number | undefined;
    startDate?: number | undefined;
}, {
    name: string;
    id: string;
    createdAt: number;
    updatedAt: number;
    status?: "completed" | "cancelled" | "planning" | "on_hold" | "active" | undefined;
    description?: string | undefined;
    endDate?: number | undefined;
    progress?: number | undefined;
    startDate?: number | undefined;
    completedTaskCount?: number | undefined;
    taskCount?: number | undefined;
}>;
declare const unifiedTodoParameters: z.ZodObject<{
    action: z.ZodEnum<["create_task", "update_task", "delete_task", "create_project", "update_project", "delete_project", "display", "clear_all", "get_stats", "batch_update"]>;
    filters: z.ZodOptional<z.ZodObject<{
        assignedTo: z.ZodOptional<z.ZodString>;
        priority: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        projectId: z.ZodOptional<z.ZodString>;
        status: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    }, "strip", z.ZodTypeAny, {
        status?: string[] | undefined;
        assignedTo?: string | undefined;
        priority?: string[] | undefined;
        projectId?: string | undefined;
    }, {
        status?: string[] | undefined;
        assignedTo?: string | undefined;
        priority?: string[] | undefined;
        projectId?: string | undefined;
    }>>;
    priority: z.ZodOptional<z.ZodEnum<["low", "medium", "high", "critical"]>>;
    progress: z.ZodOptional<z.ZodNumber>;
    project: z.ZodOptional<z.ZodObject<{
        completedTaskCount: z.ZodDefault<z.ZodNumber>;
        createdAt: z.ZodNumber;
        description: z.ZodOptional<z.ZodString>;
        endDate: z.ZodOptional<z.ZodNumber>;
        id: z.ZodString;
        name: z.ZodString;
        progress: z.ZodDefault<z.ZodNumber>;
        startDate: z.ZodOptional<z.ZodNumber>;
        status: z.ZodDefault<z.ZodEnum<["planning", "active", "on_hold", "completed", "cancelled"]>>;
        taskCount: z.ZodDefault<z.ZodNumber>;
        updatedAt: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        status: "completed" | "cancelled" | "planning" | "on_hold" | "active";
        name: string;
        id: string;
        createdAt: number;
        updatedAt: number;
        progress: number;
        completedTaskCount: number;
        taskCount: number;
        description?: string | undefined;
        endDate?: number | undefined;
        startDate?: number | undefined;
    }, {
        name: string;
        id: string;
        createdAt: number;
        updatedAt: number;
        status?: "completed" | "cancelled" | "planning" | "on_hold" | "active" | undefined;
        description?: string | undefined;
        endDate?: number | undefined;
        progress?: number | undefined;
        startDate?: number | undefined;
        completedTaskCount?: number | undefined;
        taskCount?: number | undefined;
    }>>;
    projectId: z.ZodOptional<z.ZodString>;
    status: z.ZodOptional<z.ZodEnum<["pending", "in_progress", "completed", "blocked", "cancelled"]>>;
    task: z.ZodOptional<z.ZodObject<{
        actualTime: z.ZodOptional<z.ZodNumber>;
        assignedTo: z.ZodOptional<z.ZodString>;
        category: z.ZodOptional<z.ZodString>;
        content: z.ZodString;
        createdAt: z.ZodNumber;
        dependencies: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
        estimatedTime: z.ZodOptional<z.ZodNumber>;
        id: z.ZodString;
        parentId: z.ZodOptional<z.ZodString>;
        priority: z.ZodDefault<z.ZodEnum<["low", "medium", "high", "critical"]>>;
        progress: z.ZodDefault<z.ZodNumber>;
        projectId: z.ZodOptional<z.ZodString>;
        status: z.ZodEnum<["pending", "in_progress", "completed", "blocked", "cancelled"]>;
        tags: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
        updatedAt: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        status: "in_progress" | "pending" | "completed" | "blocked" | "cancelled";
        id: string;
        content: string;
        createdAt: number;
        dependencies: string[];
        priority: "high" | "low" | "medium" | "critical";
        tags: string[];
        updatedAt: number;
        progress: number;
        actualTime?: number | undefined;
        assignedTo?: string | undefined;
        category?: string | undefined;
        estimatedTime?: number | undefined;
        parentId?: string | undefined;
        projectId?: string | undefined;
    }, {
        status: "in_progress" | "pending" | "completed" | "blocked" | "cancelled";
        id: string;
        content: string;
        createdAt: number;
        updatedAt: number;
        actualTime?: number | undefined;
        assignedTo?: string | undefined;
        category?: string | undefined;
        dependencies?: string[] | undefined;
        estimatedTime?: number | undefined;
        parentId?: string | undefined;
        priority?: "high" | "low" | "medium" | "critical" | undefined;
        projectId?: string | undefined;
        tags?: string[] | undefined;
        progress?: number | undefined;
    }>>;
    taskId: z.ZodOptional<z.ZodString>;
    tasks: z.ZodOptional<z.ZodArray<z.ZodObject<{
        actualTime: z.ZodOptional<z.ZodNumber>;
        assignedTo: z.ZodOptional<z.ZodString>;
        category: z.ZodOptional<z.ZodString>;
        content: z.ZodString;
        createdAt: z.ZodNumber;
        dependencies: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
        estimatedTime: z.ZodOptional<z.ZodNumber>;
        id: z.ZodString;
        parentId: z.ZodOptional<z.ZodString>;
        priority: z.ZodDefault<z.ZodEnum<["low", "medium", "high", "critical"]>>;
        progress: z.ZodDefault<z.ZodNumber>;
        projectId: z.ZodOptional<z.ZodString>;
        status: z.ZodEnum<["pending", "in_progress", "completed", "blocked", "cancelled"]>;
        tags: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
        updatedAt: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        status: "in_progress" | "pending" | "completed" | "blocked" | "cancelled";
        id: string;
        content: string;
        createdAt: number;
        dependencies: string[];
        priority: "high" | "low" | "medium" | "critical";
        tags: string[];
        updatedAt: number;
        progress: number;
        actualTime?: number | undefined;
        assignedTo?: string | undefined;
        category?: string | undefined;
        estimatedTime?: number | undefined;
        parentId?: string | undefined;
        projectId?: string | undefined;
    }, {
        status: "in_progress" | "pending" | "completed" | "blocked" | "cancelled";
        id: string;
        content: string;
        createdAt: number;
        updatedAt: number;
        actualTime?: number | undefined;
        assignedTo?: string | undefined;
        category?: string | undefined;
        dependencies?: string[] | undefined;
        estimatedTime?: number | undefined;
        parentId?: string | undefined;
        priority?: "high" | "low" | "medium" | "critical" | undefined;
        projectId?: string | undefined;
        tags?: string[] | undefined;
        progress?: number | undefined;
    }>, "many">>;
    templateVersion: z.ZodOptional<z.ZodEnum<["minimal", "standard", "full"]>>;
    title: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    action: "create_project" | "update_project" | "create_task" | "update_task" | "display" | "delete_task" | "delete_project" | "clear_all" | "get_stats" | "batch_update";
    status?: "in_progress" | "pending" | "completed" | "blocked" | "cancelled" | undefined;
    title?: string | undefined;
    priority?: "high" | "low" | "medium" | "critical" | undefined;
    projectId?: string | undefined;
    progress?: number | undefined;
    project?: {
        status: "completed" | "cancelled" | "planning" | "on_hold" | "active";
        name: string;
        id: string;
        createdAt: number;
        updatedAt: number;
        progress: number;
        completedTaskCount: number;
        taskCount: number;
        description?: string | undefined;
        endDate?: number | undefined;
        startDate?: number | undefined;
    } | undefined;
    taskId?: string | undefined;
    tasks?: {
        status: "in_progress" | "pending" | "completed" | "blocked" | "cancelled";
        id: string;
        content: string;
        createdAt: number;
        dependencies: string[];
        priority: "high" | "low" | "medium" | "critical";
        tags: string[];
        updatedAt: number;
        progress: number;
        actualTime?: number | undefined;
        assignedTo?: string | undefined;
        category?: string | undefined;
        estimatedTime?: number | undefined;
        parentId?: string | undefined;
        projectId?: string | undefined;
    }[] | undefined;
    task?: {
        status: "in_progress" | "pending" | "completed" | "blocked" | "cancelled";
        id: string;
        content: string;
        createdAt: number;
        dependencies: string[];
        priority: "high" | "low" | "medium" | "critical";
        tags: string[];
        updatedAt: number;
        progress: number;
        actualTime?: number | undefined;
        assignedTo?: string | undefined;
        category?: string | undefined;
        estimatedTime?: number | undefined;
        parentId?: string | undefined;
        projectId?: string | undefined;
    } | undefined;
    filters?: {
        status?: string[] | undefined;
        assignedTo?: string | undefined;
        priority?: string[] | undefined;
        projectId?: string | undefined;
    } | undefined;
    templateVersion?: "minimal" | "standard" | "full" | undefined;
}, {
    action: "create_project" | "update_project" | "create_task" | "update_task" | "display" | "delete_task" | "delete_project" | "clear_all" | "get_stats" | "batch_update";
    status?: "in_progress" | "pending" | "completed" | "blocked" | "cancelled" | undefined;
    title?: string | undefined;
    priority?: "high" | "low" | "medium" | "critical" | undefined;
    projectId?: string | undefined;
    progress?: number | undefined;
    project?: {
        name: string;
        id: string;
        createdAt: number;
        updatedAt: number;
        status?: "completed" | "cancelled" | "planning" | "on_hold" | "active" | undefined;
        description?: string | undefined;
        endDate?: number | undefined;
        progress?: number | undefined;
        startDate?: number | undefined;
        completedTaskCount?: number | undefined;
        taskCount?: number | undefined;
    } | undefined;
    taskId?: string | undefined;
    tasks?: {
        status: "in_progress" | "pending" | "completed" | "blocked" | "cancelled";
        id: string;
        content: string;
        createdAt: number;
        updatedAt: number;
        actualTime?: number | undefined;
        assignedTo?: string | undefined;
        category?: string | undefined;
        dependencies?: string[] | undefined;
        estimatedTime?: number | undefined;
        parentId?: string | undefined;
        priority?: "high" | "low" | "medium" | "critical" | undefined;
        projectId?: string | undefined;
        tags?: string[] | undefined;
        progress?: number | undefined;
    }[] | undefined;
    task?: {
        status: "in_progress" | "pending" | "completed" | "blocked" | "cancelled";
        id: string;
        content: string;
        createdAt: number;
        updatedAt: number;
        actualTime?: number | undefined;
        assignedTo?: string | undefined;
        category?: string | undefined;
        dependencies?: string[] | undefined;
        estimatedTime?: number | undefined;
        parentId?: string | undefined;
        priority?: "high" | "low" | "medium" | "critical" | undefined;
        projectId?: string | undefined;
        tags?: string[] | undefined;
        progress?: number | undefined;
    } | undefined;
    filters?: {
        status?: string[] | undefined;
        assignedTo?: string | undefined;
        priority?: string[] | undefined;
        projectId?: string | undefined;
    } | undefined;
    templateVersion?: "minimal" | "standard" | "full" | undefined;
}>;
declare const unifiedTodoOutput: z.ZodUnion<[z.ZodObject<{
    message: z.ZodString;
    operation: z.ZodOptional<z.ZodString>;
    project: z.ZodOptional<z.ZodObject<{
        completedTaskCount: z.ZodDefault<z.ZodNumber>;
        createdAt: z.ZodNumber;
        description: z.ZodOptional<z.ZodString>;
        endDate: z.ZodOptional<z.ZodNumber>;
        id: z.ZodString;
        name: z.ZodString;
        progress: z.ZodDefault<z.ZodNumber>;
        startDate: z.ZodOptional<z.ZodNumber>;
        status: z.ZodDefault<z.ZodEnum<["planning", "active", "on_hold", "completed", "cancelled"]>>;
        taskCount: z.ZodDefault<z.ZodNumber>;
        updatedAt: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        status: "completed" | "cancelled" | "planning" | "on_hold" | "active";
        name: string;
        id: string;
        createdAt: number;
        updatedAt: number;
        progress: number;
        completedTaskCount: number;
        taskCount: number;
        description?: string | undefined;
        endDate?: number | undefined;
        startDate?: number | undefined;
    }, {
        name: string;
        id: string;
        createdAt: number;
        updatedAt: number;
        status?: "completed" | "cancelled" | "planning" | "on_hold" | "active" | undefined;
        description?: string | undefined;
        endDate?: number | undefined;
        progress?: number | undefined;
        startDate?: number | undefined;
        completedTaskCount?: number | undefined;
        taskCount?: number | undefined;
    }>>;
    stats: z.ZodOptional<z.ZodObject<{
        blocked: z.ZodNumber;
        cancelled: z.ZodNumber;
        completed: z.ZodNumber;
        in_progress: z.ZodNumber;
        pending: z.ZodNumber;
        projectProgress: z.ZodOptional<z.ZodNumber>;
        total: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        in_progress: number;
        pending: number;
        completed: number;
        blocked: number;
        cancelled: number;
        total: number;
        projectProgress?: number | undefined;
    }, {
        in_progress: number;
        pending: number;
        completed: number;
        blocked: number;
        cancelled: number;
        total: number;
        projectProgress?: number | undefined;
    }>>;
    success: z.ZodBoolean;
    tasks: z.ZodOptional<z.ZodArray<z.ZodObject<{
        actualTime: z.ZodOptional<z.ZodNumber>;
        assignedTo: z.ZodOptional<z.ZodString>;
        category: z.ZodOptional<z.ZodString>;
        content: z.ZodString;
        createdAt: z.ZodNumber;
        dependencies: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
        estimatedTime: z.ZodOptional<z.ZodNumber>;
        id: z.ZodString;
        parentId: z.ZodOptional<z.ZodString>;
        priority: z.ZodDefault<z.ZodEnum<["low", "medium", "high", "critical"]>>;
        progress: z.ZodDefault<z.ZodNumber>;
        projectId: z.ZodOptional<z.ZodString>;
        status: z.ZodEnum<["pending", "in_progress", "completed", "blocked", "cancelled"]>;
        tags: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
        updatedAt: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        status: "in_progress" | "pending" | "completed" | "blocked" | "cancelled";
        id: string;
        content: string;
        createdAt: number;
        dependencies: string[];
        priority: "high" | "low" | "medium" | "critical";
        tags: string[];
        updatedAt: number;
        progress: number;
        actualTime?: number | undefined;
        assignedTo?: string | undefined;
        category?: string | undefined;
        estimatedTime?: number | undefined;
        parentId?: string | undefined;
        projectId?: string | undefined;
    }, {
        status: "in_progress" | "pending" | "completed" | "blocked" | "cancelled";
        id: string;
        content: string;
        createdAt: number;
        updatedAt: number;
        actualTime?: number | undefined;
        assignedTo?: string | undefined;
        category?: string | undefined;
        dependencies?: string[] | undefined;
        estimatedTime?: number | undefined;
        parentId?: string | undefined;
        priority?: "high" | "low" | "medium" | "critical" | undefined;
        projectId?: string | undefined;
        tags?: string[] | undefined;
        progress?: number | undefined;
    }>, "many">>;
}, "strip", z.ZodTypeAny, {
    message: string;
    success: boolean;
    project?: {
        status: "completed" | "cancelled" | "planning" | "on_hold" | "active";
        name: string;
        id: string;
        createdAt: number;
        updatedAt: number;
        progress: number;
        completedTaskCount: number;
        taskCount: number;
        description?: string | undefined;
        endDate?: number | undefined;
        startDate?: number | undefined;
    } | undefined;
    tasks?: {
        status: "in_progress" | "pending" | "completed" | "blocked" | "cancelled";
        id: string;
        content: string;
        createdAt: number;
        dependencies: string[];
        priority: "high" | "low" | "medium" | "critical";
        tags: string[];
        updatedAt: number;
        progress: number;
        actualTime?: number | undefined;
        assignedTo?: string | undefined;
        category?: string | undefined;
        estimatedTime?: number | undefined;
        parentId?: string | undefined;
        projectId?: string | undefined;
    }[] | undefined;
    operation?: string | undefined;
    stats?: {
        in_progress: number;
        pending: number;
        completed: number;
        blocked: number;
        cancelled: number;
        total: number;
        projectProgress?: number | undefined;
    } | undefined;
}, {
    message: string;
    success: boolean;
    project?: {
        name: string;
        id: string;
        createdAt: number;
        updatedAt: number;
        status?: "completed" | "cancelled" | "planning" | "on_hold" | "active" | undefined;
        description?: string | undefined;
        endDate?: number | undefined;
        progress?: number | undefined;
        startDate?: number | undefined;
        completedTaskCount?: number | undefined;
        taskCount?: number | undefined;
    } | undefined;
    tasks?: {
        status: "in_progress" | "pending" | "completed" | "blocked" | "cancelled";
        id: string;
        content: string;
        createdAt: number;
        updatedAt: number;
        actualTime?: number | undefined;
        assignedTo?: string | undefined;
        category?: string | undefined;
        dependencies?: string[] | undefined;
        estimatedTime?: number | undefined;
        parentId?: string | undefined;
        priority?: "high" | "low" | "medium" | "critical" | undefined;
        projectId?: string | undefined;
        tags?: string[] | undefined;
        progress?: number | undefined;
    }[] | undefined;
    operation?: string | undefined;
    stats?: {
        in_progress: number;
        pending: number;
        completed: number;
        blocked: number;
        cancelled: number;
        total: number;
        projectProgress?: number | undefined;
    } | undefined;
}>, z.ZodObject<{
    error: z.ZodString;
}, "strip", z.ZodTypeAny, {
    error: string;
}, {
    error: string;
}>]>;
declare class UnifiedTodoManager {
    private projects;
    private tasks;
    private templateCache;
    constructor();
    clearAll(sessionKey: string): void;
    createProject(sessionKey: string, project: z.infer<typeof unifiedProjectSchema>): z.infer<typeof unifiedProjectSchema>;
    createTask(sessionKey: string, task: z.infer<typeof unifiedTodoItemSchema>): z.infer<typeof unifiedTodoItemSchema>;
    deleteTask(sessionKey: string, taskId: string): boolean;
    getProject(sessionKey: string, projectId: string): null | z.infer<typeof unifiedProjectSchema>;
    getStats(sessionKey: string, projectId?: string): {
        blocked: number;
        cancelled: number;
        completed: number;
        in_progress: number;
        pending: number;
        projectProgress: number;
        total: number;
    };
    getTasks(sessionKey: string, filters?: any): Array<z.infer<typeof unifiedTodoItemSchema>>;
    updateProject(sessionKey: string, projectId: string, updates: Partial<z.infer<typeof unifiedProjectSchema>>): null | z.infer<typeof unifiedProjectSchema>;
    updateTask(sessionKey: string, taskId: string, updates: Partial<z.infer<typeof unifiedTodoItemSchema>>): null | z.infer<typeof unifiedTodoItemSchema>;
    private generateId;
    private initializeDefaults;
    private updateProjectProgress;
    private updateProjectTaskCount;
}
declare const todoManager: UnifiedTodoManager;

declare const unifiedTodoListTool: Tool<typeof unifiedTodoParameters, typeof unifiedTodoOutput>;

export { todoManager, unifiedTodoListTool, unifiedTodoOutput, unifiedTodoParameters };
