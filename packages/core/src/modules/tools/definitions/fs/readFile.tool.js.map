{"version":3,"file":"readFile.tool.js","sourceRoot":"","sources":["readFile.tool.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,QAAQ,IAAI,EAAE,EAAE,MAAM,IAAI,CAAC;AACpC,OAAO,IAAI,MAAM,MAAM,CAAC;AACxB,4CAA4C;AAC5C,OAAO,EAAE,CAAC,EAAE,MAAM,KAAK,CAAC;AAIxB,MAAM,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,WAAW,CAAC,CAAC;AAE/D,EAAE,CAAC,KAAK,CAAC,aAAa,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AAElE,MAAM,CAAC,MAAM,cAAc,GAAG,CAAC,CAAC,MAAM,CAAC;IACrC,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,4CAA4C,CAAC;CACxE,CAAC,CAAC;AAEH,MAAM,CAAC,MAAM,YAAY,GAAgC;IACvD,WAAW,EAAE,iDAAiD;IAC9D,OAAO,EAAE,KAAK,IAAI,EAAE;QAClB,oCAAoC;QACpC,OAAO,qBAAqB,CAAC;IAC/B,CAAC;IACD,IAAI,EAAE,UAAU;IAChB,UAAU,EAAE,cAAc;CAC3B,CAAC","sourcesContent":["import { Context } from 'fastmcp';\nimport { promises as fs } from 'fs';\nimport path from 'path';\n// ===== src/tools/fs/readFile.tool.ts =====\nimport { z } from 'zod';\n\nimport type { SessionData, Tool } from '../../types.js';\n\nconst WORKSPACE_DIR = path.resolve(process.cwd(), 'workspace');\n\nfs.mkdir(WORKSPACE_DIR, { recursive: true }).catch(console.error);\n\nexport const readFileParams = z.object({\n  path: z.string().describe('The path to the file inside the workspace.'),\n});\n\nexport const readFileTool: Tool<typeof readFileParams> = {\n  description: 'Reads the content of a file from the workspace.',\n  execute: async () => {\n    // ... reste de la logique inchang√©e\n    return 'Read file executed.';\n  },\n  name: 'readFile',\n  parameters: readFileParams,\n};\n"]}