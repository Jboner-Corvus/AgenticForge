{"version":3,"file":"synchronousExample.tool.js","sourceRoot":"","sources":["synchronousExample.tool.ts"],"names":[],"mappings":"AAGA,yDAAyD;AACzD,OAAO,EAAE,CAAC,IAAI,GAAG,EAAE,MAAM,KAAK,CAAC;AAK/B,MAAM,cAAc,GAAG,gCAAgC,CAAC;AAExD,MAAM,CAAC,MAAM,wBAAwB,GAAG,GAAG,CAAC,MAAM,CAAC;IACjD,IAAI,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,yBAAyB,CAAC;IAC7D,OAAO,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC;IACnE,eAAe,EAAE,GAAG,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC;IACxD,MAAM,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;CAChC,CAAC,CAAC;AAGH,MAAM,CAAC,MAAM,sBAAsB,GAA0C;IAC3E,WAAW,EAAE,4BAA4B;IACzC,OAAO,EAAE,KAAK,EACZ,KAAqB,EACrB,QAA8B,EACR,EAAE;QACxB,+BAA+B;QAC/B,OAAO,EAAE,IAAI,EAAE,wBAAwB,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;IAC1D,CAAC;IACD,IAAI,EAAE,cAAc;IACpB,UAAU,EAAE,wBAAwB;CACrC,CAAC","sourcesContent":["import type { TextContent } from 'fastmcp';\n\nimport { Context } from 'fastmcp';\n// --- Fichier : src/tools/synchronousExample.tool.ts ---\nimport { z as zod } from 'zod';\nimport { z } from 'zod';\n\nimport type { SessionData, Tool } from '../types.js';\n\nconst SYNC_TOOL_NAME = 'synchronousExampleToolEnhanced';\n\nexport const synchronousExampleParams = zod.object({\n  data: zod.string().min(1).describe('La donnée à transmuter.'),\n  delayMs: zod.number().int().min(0).max(1000).optional().default(10),\n  useClientLogger: zod.boolean().optional().default(false),\n  userId: zod.string().optional(),\n});\nexport type SyncParamsType = zod.infer<typeof synchronousExampleParams>;\n\nexport const synchronousExampleTool: Tool<typeof synchronousExampleParams> = {\n  description: \"Exemple d'outil synchrone.\",\n  execute: async (\n    _args: SyncParamsType,\n    _context: Context<SessionData>,\n  ): Promise<TextContent> => {\n    // ... la logique reste la même\n    return { text: 'Sync example executed.', type: 'text' };\n  },\n  name: SYNC_TOOL_NAME,\n  parameters: synchronousExampleParams,\n};\n"]}