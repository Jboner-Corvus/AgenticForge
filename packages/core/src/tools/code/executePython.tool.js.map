{"version":3,"file":"executePython.tool.js","sourceRoot":"","sources":["executePython.tool.ts"],"names":[],"mappings":"AACA,uCAAuC;AACvC,OAAO,EAAE,CAAC,EAAE,MAAM,KAAK,CAAC;AAIxB,OAAO,EAAE,MAAM,EAAE,MAAM,iBAAiB,CAAC;AACzC,OAAO,EAAE,YAAY,EAAE,MAAM,8BAA8B,CAAC;AAC5D,OAAO,EAAE,aAAa,EAAE,MAAM,2BAA2B,CAAC;AAE1D,MAAM,CAAC,MAAM,mBAAmB,GAAG,CAAC,CAAC,MAAM,CAAC;IAC1C,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,6BAA6B,CAAC;CACzD,CAAC,CAAC;AAEH,MAAM,CAAC,MAAM,iBAAiB,GAAqC;IACjE,WAAW,EAAE,2DAA2D;IACxE,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,GAAyB,EAAE,EAAE;QACjD,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,mCAAmC,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;QACvE,IAAI,CAAC;YACH,MAAM,MAAM,GAAG,MAAM,YAAY,CAAC,MAAM,CAAC,oBAAoB,EAAE;gBAC7D,QAAQ;gBACR,IAAI;gBACJ,IAAI,CAAC,IAAI;aACV,CAAC,CAAC;YACH,IAAI,MAAM,GAAG,cAAc,MAAM,CAAC,QAAQ,IAAI,CAAC;YAC/C,IAAI,MAAM,CAAC,MAAM;gBAAE,MAAM,IAAI,mBAAmB,MAAM,CAAC,MAAM,IAAI,CAAC;YAClE,IAAI,MAAM,CAAC,MAAM;gBAAE,MAAM,IAAI,mBAAmB,MAAM,CAAC,MAAM,IAAI,CAAC;YAClE,OAAO,MAAM,CAAC;QAChB,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,0EAA0E;YAC1E,MAAM,UAAU,GAAG,aAAa,CAAC,KAAK,CAAC,CAAC;YACxC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,iCAAiC,EAAE;gBAC/C,OAAO,EAAE,UAAU,CAAC,OAAO;gBAC3B,IAAI,EAAE,UAAU,CAAC,IAAI;gBACrB,KAAK,EAAE,UAAU,CAAC,KAAK;aACxB,CAAC,CAAC;YACH,OAAO,yCAAyC,UAAU,CAAC,OAAO,EAAE,CAAC;QACvE,CAAC;IACH,CAAC;IACD,IAAI,EAAE,eAAe;IACrB,UAAU,EAAE,mBAAmB;CAChC,CAAC","sourcesContent":["import { Context } from 'fastmcp';\n// src/tools/code/executePython.tool.ts\nimport { z } from 'zod';\n\nimport type { SessionData, Tool } from '../../types.js';\n\nimport { config } from '../../config.js';\nimport { runInSandbox } from '../../utils/dockerManager.js';\nimport { getErrDetails } from '../../utils/errorUtils.js';\n\nexport const executePythonParams = z.object({\n  code: z.string().describe('The Python code to execute.'),\n});\n\nexport const executePythonTool: Tool<typeof executePythonParams> = {\n  description: 'Executes Python 3 code in a secure sandboxed environment.',\n  execute: async (args, ctx: Context<SessionData>) => {\n    ctx.log.info('Executing Python code in sandbox.', { code: args.code });\n    try {\n      const result = await runInSandbox(config.PYTHON_SANDBOX_IMAGE, [\n        'python',\n        '-c',\n        args.code,\n      ]);\n      let output = `Exit Code: ${result.exitCode}\\n`;\n      if (result.stdout) output += `--- STDOUT ---\\n${result.stdout}\\n`;\n      if (result.stderr) output += `--- STDERR ---\\n${result.stderr}\\n`;\n      return output;\n    } catch (error) {\n      // CORRECTION DÉFINITIVE : Séparation du message et de l'objet de données.\n      const errDetails = getErrDetails(error);\n      ctx.log.error('Python sandbox execution failed', {\n        message: errDetails.message,\n        name: errDetails.name,\n        stack: errDetails.stack,\n      });\n      return `Error: Failed to execute Python code. ${errDetails.message}`;\n    }\n  },\n  name: 'executePython',\n  parameters: executePythonParams,\n};\n"]}